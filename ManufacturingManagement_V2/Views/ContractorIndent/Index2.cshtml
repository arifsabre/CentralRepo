@model ManufacturingManagement_V2.Models.ContractorIndentMDI
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayouCivil.cshtml";
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
</head>
<body>
   
    <div style="text-align:left;font-weight:normal;margin-left:20px">
        Civil/Electrical Work Indent System
        @ViewBag.Message
        @*</div>*@
        @using (Html.BeginForm("Index", "ContractorIndent", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <br />
            <label>Select Company</label><br />
            @Html.DropDownListFor(model => model.compcode, ViewBag.LocationList as SelectList)<br />
            <label>Enter Location</label>
            @Html.TextBoxFor(model => model.Location, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })

            <label>Select Work Category</label><br />
            @Html.DropDownList("Wid", new List<SelectListItem>
            {
          new SelectListItem { Text = "Civil", Value = "1"},
          new SelectListItem { Text = "Electrical", Value = "2"},
          new SelectListItem { Text = "Other", Value = "3"}
          })
            <br />
            <label>Enter Contractor Name</label>
            @Html.TextBoxFor(model => model.Contractor, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Contractor, "", new { @class = "text-danger" })

            <label>Enter WorkDetail</label>
            @Html.TextAreaFor(model => model.WorkDetail, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.WorkDetail, "", new { @class = "text-danger" })
            <label>Enter Estimated Amount</label>
            @Html.TextBoxFor(model => model.EstimateAmount, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.EstimateAmount, "", new { @class = "text-danger" })
            <label>Work StartDate</label>
            <br />
            @Html.EditorFor(model => model.WorkStartDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.WorkStartDate, "", new { @class = "text-danger" })
            <label>Work Complated Date</label> <br />
            @Html.EditorFor(model => model.WorkComplatedDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.WorkComplatedDate, "", new { @class = "text-danger" })
            <label>Enter Remark</label>
            <br />
            @Html.TextBoxFor(model => model.Remark)<br />
            @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
            <label>Enter Instruction Given By</label>
            <br />
            @Html.TextBoxFor(model => model.InstructionGivenBy, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.UserId)

            <label>Select Quatation</label>
            <br />
            @Html.TextBoxFor(model => model.files, "", new { @type = "file", @multiple = "multiple" })
            @Html.ValidationMessageFor(model => model.files, "", new { @class = "text-danger" })
            <br />
            <div style="text-align:center">
                <button type="submit" id="Apply" class="btn btn-primary">Sumbit</button>
            </div>
           

        }
    </div>

</body>
</html>
@section Scripts {
    @*@Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/jqueryval")*@
    <script type="text/javascript">
        $(document).ready(function () {
            $('#Apply').prop('disabled', true);
            $("#files").change(function () {
                // Get uploaded file extension
                var extension = $(this).val().split('.').pop().toLowerCase();
                // Create array with the files extensions that we wish to upload
                var validFileExtensions = ['doc', 'docx', 'pdf', 'ppt'];
                //Check file extension in the array.if -1 that means the file extension is not in the list.
                if ($.inArray(extension, validFileExtensions) == -1) {
                    alert("Sorry!! Upload only 'doc', 'docx', 'pdf' 'ppt' file")
                    // Clear fileuload control selected file
                    $(this).replaceWith($(this).val('').clone(true));
                    //Disable Submit Button
                    $('#Apply').prop('disabled', true);
                } else {
                    // Check and restrict the file size to 128 KB.
                    if ($(this).get(0).files[0].size > (131072131072)) {
                        alert("Sorry!! Max allowed file size is 228 kb");
                        // Clear fileuload control selected file
                        $(this).replaceWith($(this).val('').clone(true));
                        //Disable Submit Button
                        $('#Apply').prop('disabled', true);
                    } else {
                        //Enable Submit Button
                        $('#Apply').prop('disabled', false);
                    }
                }
            });
            //  $(document).ready(function () {
            $("#Apply").click(function () {
                if ($('#Location').val().trim() == '') {
                    //$('#Location').next('span').show();
                    
                } else {
                    return_val = true;
                }  
            });
        });
    </script>
}
