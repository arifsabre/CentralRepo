@model ManufacturingManagement_V2.Models.SaleMdl
@using Newtonsoft.Json

@{
    ViewBag.Title = "CreateUpdate";
    Layout = "~/views/shared/_LayoutCommon.cshtml";
    //Layout = "~/views/shared/_LayoutIFramePopup.cshtml";
}
@{var lstTrpMode = new List<System.Web.UI.WebControls.ListItem>
{
          new System.Web.UI.WebControls.ListItem { Text = "N/A", Value="N/A" },
          new System.Web.UI.WebControls.ListItem { Text = "By Road", Value="By Road" },
          new System.Web.UI.WebControls.ListItem { Text = "By Rail", Value="By Rail" },
          new System.Web.UI.WebControls.ListItem { Text = "By Post", Value="By Post" },
          new System.Web.UI.WebControls.ListItem { Text = "By Hand", Value="By Hand" },
          new System.Web.UI.WebControls.ListItem { Text = "By Courier", Value="By Courier" },
          new System.Web.UI.WebControls.ListItem { Text = "By Speed Post", Value="By Speed Post" },
          new System.Web.UI.WebControls.ListItem { Text = " ", Value=" " }
    };
}

<table>
    <tr>
        <td><h4><b>Sale Entry</b></h4></td>
        <td><h5><b>&nbsp;&nbsp;(By Purchase Order)</b></h5></td>
    </tr>
</table>
<div class="form-group">
    <h5><b>Sale Detail</b></h5>
    <table class="table table-bordered">
        @Html.Hidden("hfSaleRecId", null, new { @id = "hfSaleRecId" })
        @Html.Hidden("hfItemRecId", null, new { @id = "hfItemRecId" })
        @Html.Hidden("hfItemCode", null, new { @id = "hfItemCode" })
        @Html.Hidden("hfLgrItemId", null, new { @id = "hfLgrItemId" })
        @Html.Hidden("hfLRecId", null, new { @id = "hfLRecId" })
        @Html.Hidden("hfPOrderId", null, new { @id = "hfPOrderId" })

        <tr>
            <td>Invoice&nbsp;No</td>
            <td>
                <input type="text" id="txtInvSeries" readonly="readonly" style="width:20px;" />
                <input type="text" id="txtVNo" readonly="readonly" style="width:100px;" />
                <span class="error">Invalid VNo!</span>
            </td>
            <td>Invoice&nbsp;Date</td>
            <td>
                <input type="text" id="txtVDate" class="datepicker" />
                <span class="error">Invalid VDate!</span>
            </td>
        </tr>

        <tr>
            <td style="vertical-align:top;">P.&nbsp;Order&nbsp;No</td>
            <td>
                <input type="text" id="txtPONumber" style="width:305px;"
                       placeholder="start typing, then select" readonly="readonly" />
                <span class="error">Invalid other charges!</span>
            </td>
            <td style="vertical-align:top;">MA No & Date</td>
            <td>
                <input type="text" id="txtMANo" style="width:305px;" />
                <span class="error">Invalid other charges!</span>
            </td>
        </tr>

        <tr>
            <td>Invoice Mode</td>
            <td>
                @Html.DropDownList("ddlInvoiceMode", ViewBag.InvoiceModeList as SelectList,
                    new { @onchange = "performChangeForInvoiceMode()" })
                <span class="error">Invalid VType!</span>
            </td>
            <td colspan="2">
                <div id="dvExpOpt">
                    <input id="ExpOpt1" name="ExpOpt" type="radio" style="width:17px;height:17px;"
                           value="Against GST" checked="checked" />&nbsp;Against GST
                    &nbsp;&nbsp;<input id="ExpOpt2" name="ExpOpt" type="radio" style="width:17px;height:17px;"
                                       value="Against Bond" />&nbsp;Against Bond
                </div>
                <div id="dvRemarks">
                    <table>
                        <tr>
                            <td style="vertical-align:top;">Remarks</td>
                            <td>&nbsp;&nbsp;&nbsp;</td>
                            <td>
                                <textarea id="txtSRemarks" rows="2" cols="40"></textarea>
                                <span class="error">Indent(s) not entered!</span>
                            </td>
                        </tr>
                    </table>
                </div>
            </td>
        </tr>

        <tr>
            <td style="width:15%;vertical-align:top;">Consignee</td>
            <td>
                @Html.DropDownList("ddlConsignee", ViewBag.ConsigneeList as SelectList,
                    new { @onchange = "SetConsigneeInfo()", @style = "width:310px;" })
                <table>
                    <tr>
                        <td style="vertical-align:top;">Address</td>
                        <td style="vertical-align:top;">&nbsp;:</td>
                        <td style="text-align:left;">
                            <div id="ConsgAdrDiv"></div>
                        </td>
                    </tr>
                    <tr>
                        <td>State</td>
                        <td>&nbsp;:</td>
                        <td>
                            <label id="lblConsgState" style="font-weight:normal;"></label>
                        </td>
                    </tr>
                    <tr>
                        <td>StateCode</td>
                        <td>&nbsp;:</td>
                        <td>
                            <label id="lblConsgStateCode" style="font-weight:normal;"></label>
                        </td>
                    </tr>
                    <tr>
                        <td>GSTIN</td>
                        <td>&nbsp;:</td>
                        <td>
                            <label id="lblConsgGSTIN" style="font-weight:normal;"></label>
                        </td>
                    </tr>
                </table>
            </td>
            <td style="width:15%;vertical-align:top;">Paying Authority</td>
            <td>
                @Html.DropDownList("ddlPayingAuthority", ViewBag.PayingAuthList as SelectList,
                    new { @onchange = "SetPayingAuthorityInfo()", @style = "width:310px;" })
                <table>
                    <tr>
                        <td style="vertical-align:top;">Address</td>
                        <td style="vertical-align:top;">&nbsp;:</td>
                        <td style="text-align:left;">
                            <div id="PAuthAdrDiv"></div>
                        </td>
                    </tr>
                    <tr>
                        <td>State</td>
                        <td>&nbsp;:</td>
                        <td>
                            <label id="lblPAuthState" style="font-weight:normal;"></label>
                        </td>
                    </tr>
                    <tr>
                        <td>StateCode</td>
                        <td>&nbsp;:</td>
                        <td>
                            <label id="lblPAuthStateCode" style="font-weight:normal;"></label>
                        </td>
                    </tr>
                    <tr>
                        <td>GSTIN</td>
                        <td>&nbsp;:</td>
                        <td>
                            <label id="lblPAuthGSTIN" style="font-weight:normal;"></label>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>

        <tr>
            <td style="width:15%;vertical-align:top;">Party</td>
            <td>
                @Html.DropDownList("ddlParty", ViewBag.PartyList as SelectList,
                    new { @onchange = "SetPartyInfo()", @style = "width:310px;", @disabled = "true" })
                <table>
                    <tr>
                        <td style="vertical-align:top;">Address</td>
                        <td style="vertical-align:top;">&nbsp;:</td>
                        <td style="text-align:left;">
                            <div id="PartyAdrDiv"></div>
                        </td>
                    </tr>
                    <tr>
                        <td>State</td>
                        <td>&nbsp;:</td>
                        <td>
                            <label id="lblPartyState" style="font-weight:normal;"></label>
                        </td>
                    </tr>
                    <tr>
                        <td>StateCode</td>
                        <td>&nbsp;:</td>
                        <td>
                            <label id="lblPartyStateCode" style="font-weight:normal;"></label>
                        </td>
                    </tr>
                    <tr>
                        <td>GSTIN</td>
                        <td>&nbsp;:</td>
                        <td>
                            <label id="lblPartyGSTIN" style="font-weight:normal;"></label>
                        </td>
                    </tr>
                </table>
            </td>

            <td colspan="2">
                <table>
                    <tr>
                        <td style="width:130px;vertical-align:top;">Electronic&nbsp;Ref.&nbsp;No</td>
                        <td>
                            <input type="text" id="txtElctRefNo" />
                            <span class="error">Vendor not selected!</span>
                        </td>
                    </tr>
                    <tr>
                        <td valign="top">Electronic&nbsp;Ref.&nbsp;Date</td>
                        <td>
                            <input type="text" id="txtElctRefDate" class="datepicker" />
                            <span class="error">Vendor not selected!</span>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>

        <tr>
            <td>Inv. Reference No</td>
            <td>
                <input type="text" id="txtInvReferenceNo" />
                <span class="error">Inv referencve No not entered!</span>
            </td>
            <td>Prec. Doc. No</td>
            <td>
                <input type="text" id="txtPrecDocNo" />
                <span class="error">Inv referencve No not entered!</span>
            </td>
        </tr>

        <tr>
            <td>Supply Type</td>
            <td>
                @Html.DropDownList("ddlSupTypeCode", ViewBag.SupplyTypeList as SelectList)
            </td>
            <td>Prec. Doc. Date</td>
            <td>
                <input type="text" id="txtPrecDocDate" readonly="readonly" />
                <span class="error">Invalid Preceding Document Date!</span>
            </td>
        </tr>
        <tr>
            <td>Supply From</td>
            <td>
                @Html.DropDownList("ddlSupAddressId", ViewBag.CompAddress as SelectList)
            </td>
            <td>Distance KM</td>
            <td>
                <input type="text" id="txtDistanceKM" />
            </td>
        </tr>

        <tr><td colspan="4"><h5><b>Item Detail</b></h5></td></tr>
        <tr>
            <td>Item</td>
            <td>
                <input type="text" id="txtItemCode" placeholder="start typing, then select" />
                <span class="error">Item not selected!</span>
            </td>
            <td style="vertical-align:top;">No Of Packages</td>
            <td>
                <input type="text" id="txtNoOfPckg" />
                <span class="error">Item description not entered!</span>
            </td>
        </tr>
        <tr>
            <td style="vertical-align:top;">Item Description</td>
            <td colspan="3">
                <textarea id="txtItemDesc" rows="4" cols="80"></textarea>
                <span class="error">Item description not entered!</span>
            </td>
        </tr>
        <tr>
            <td>Quantity</td>
            <td>
                <input type="text" id="txtQty" class="numericfld" />
                <span class="error">Invalid Qty!</span>
            </td>
            <td>Unit</td>
            <td>
                @Html.DropDownList("ddlUnit", ViewBag.UnitList as SelectList,
                        new { disabled = "true" })
                <input type="text" id="txtUnitName" />
                <span class="error">Unit not selected!</span>
            </td>
        </tr>
        <tr>
            <td>GST Inclusive</td>
            <td>
                @Html.CheckBox("InclusiveGST", false, new
                {
                    @id = "chkIsInclGST",
                       style = "width: 50px; height: 18px; padding: 0; text-align:center;"
                })
                <span class="error">Invalid Qty!</span>
            </td>
            <td>HSN/SAC</td>
            <td>
                <input type="text" id="txtHSNCode" />
                <span class="error">Unit not selected!</span>
            </td>
        </tr>

        <tr>
            <td>Rate</td>
            <td>
                <input type="text" id="txtRate1" class="numericfld" />
                <span class="error">Invalid Rate!</span>
            </td>
            <td>Amount</td>
            <td>
                <label id="lblAmountLgr" class="numericfld"></label>
                <span class="error">Invalid Discount!</span>
            </td>
        </tr>

        <tr>
            <td>Unit Rate</td>
            <td>
                <input type="text" id="txtUnitRate" class="numericfld" />
                <span class="error">Invalid Rate!</span>
            </td>
            <td>Discount/Unit</td>
            <td>
                <input type="text" id="txtDiscount" class="numericfld" />
                <span class="error">Invalid Discount!</span>
            </td>
        </tr>

        <tr>
            <td>Taxable Amount</td>
            <td>
                <label id="lblTaxableAmountLgr" class="numericfld"></label>
                <span class="error">Invalid Rate!</span>
            </td>
        </tr>

        <tr>
            <td>SGST %</td>
            <td>
                <input type="text" id="txtVATPer" class="numericfld" />
                <label id="lblVATAmountLgr" class="numericfld"></label>
                <span class="error">Invalid SGST%!</span>
            </td>
            <td>IGST %</td>
            <td>
                <input type="text" id="txtCSTPer" class="numericfld" />
                <label id="lblCSTAmountLgr" class="numericfld"></label>
                <span class="error">Invalid IGST%!</span>
            </td>
        </tr>
        <tr>
            <td>CGST %</td>
            <td>
                <input type="text" id="txtSATPer" class="numericfld" />
                <label id="lblSATAmountLgr" class="numericfld"></label>
                <span class="error">Invalid CGST%!</span>
            </td>
            <td>Freight/Unit</td>
            <td>
                <input type="text" id="txtFreightRate" class="numericfld" />
                <label id="lblFreightAmountLgr" class="numericfld"></label>
                <span class="error">Invalid Freight/Unit!</span>
            </td>
        </tr>
        <tr>
            <td>Net Amount</td>
            <td colspan="2">
                <label id="lblNetAmountLgr" class="numericfld"></label>
                <span class="error">Invalid remarks!</span>
            </td>
            <td colspan="2" style="text-align:right;">
                <input type="button" class="btn btn-default" id="add" value="Add" />
            </td>
        </tr>

    </table>

    <span>List of Items:-</span>

    <div id="items" style="width: 98%; overflow-x: scroll;">
        <table id="StepsTable" class="tablecontainer" style="width:100%;">
            <tr>
                <th style="width:30px;">
                    POItemNo
                </th>
                <th style="width:30px;">
                    ItemCode
                </th>
                <th style="width:50px;">
                    Consignee
                </th>
                <th style="width:100px;">
                    O.Qty
                </th>
                <th style="width:100px;">
                    D.Qty
                </th>
                <th style="width:auto;">
                    R.Qty
                </th>
                <th style="width:auto;">
                    Rate
                </th>
                <th style="width:100px;">
                    S.Qty
                </th>
                <th style="width:40px;">
                    Discount/Unit
                </th>
                <th style="width:30px;">
                    SGST%
                </th>
                <th style="width:30px;">
                    CGST%
                </th>
                <th style="width:30px;">
                    IGST%
                </th>
                <th style="width:30px;">
                    GSTInclusive
                </th>
                <th style="width:30px;">
                    UnitRate
                </th>
                <th style="width:30px;">
                    FreightRate
                </th>
                <th style="width:30px;">
                    NetAmount
                </th>
                <th style="width:30px;">
                    Unit
                </th>
                <th style="width:30px;">
                    Amount
                </th>
                <th style="width:30px;">
                    TaxableAmount
                </th>
                <th style="width:30px;">
                    SGSTAmount
                </th>
                <th style="width:30px;">
                    CGSTAmount
                </th>
                <th style="width:30px;">
                    IGSTAmount
                </th>
                <th style="width:30px;">
                    FreightTAmount
                </th>
                <th style="width:30px;">
                    DP
                </th>
                <th style="width:30px;">
                    HSNCode
                </th>
                <th style="width:30px;">
                    ItemRecId
                </th>
                <th style="width:auto;">
                    ItemDesc______________________________________________________________________________
                </th>
                <th style="width:30px;">
                    HsQty
                </th>
            </tr>

            @{int i = 1;}
            @foreach (var item in Model.Ledgers)
            {
                <tr>
                    <td class="indexColumn">
                        @*@Html.HiddenFor(model => item.ItemRecId)*@
                        @Html.Label("lblItemSlNo" + i.ToString(), item.ItemSlNo.ToString(), new { @id = "ItemSlNo" + (i - 1) })
                    </td>
                    <td>
                        @Html.Label("lblItemCode" + i.ToString(), item.ItemCode.ToString(), new { @id = "ItemCode" + (i - 1) })
                    </td>
                    <td>
                        @Html.Label("lblConsigneeName" + i.ToString(), item.ConsigneeName, new { @id = "ConsigneeName" + (i - 1) })
                    </td>
                    <td>
                        @Html.Label("lblOrdQty" + i.ToString(), item.OrdQty.ToString(), new { @id = "OrdQty" + (i - 1) })
                    </td>
                    <td>
                        @Html.Label("lblDspQty" + i.ToString(), item.DspQty.ToString(), new { @id = "DspQty" + (i - 1) })
                    </td>
                    <td>
                        @Html.Label("lblRemQty" + i.ToString(), item.RemQty.ToString(), new { @id = "RemQty" + (i - 1) })
                    </td>
                    <td>
                        @Html.TextBox("txtRate" + i.ToString(), item.Rate, new { @id = "txtRate" + (i - 1), style = "width: 100px;" })
                    </td>
                    <td>
                        @Html.TextBox("txtQty" + i.ToString(), item.Qty, new { @id = "txtQty" + (i - 1), style = "width: 100px;" })
                    </td>
                    <td>
                        @Html.TextBox("txtDiscount" + i.ToString(), item.Discount, new { @id = "txtDiscount" + (i - 1), style = "width: 100px;" })
                    </td>
                    <td>
                        @Html.TextBox("txtVATPer" + i.ToString(), item.VATPer, new { @id = "txtVATPer" + (i - 1), style = "width: 100px;" })
                    </td>
                    <td>
                        @Html.TextBox("txtSATPer" + i.ToString(), item.SATPer, new { @id = "txtSATPer" + (i - 1), style = "width: 100px;" })
                    </td>
                    <td>
                        @Html.TextBox("txtCSTPer" + i.ToString(), item.CSTPer, new { @id = "txtCSTPer" + (i - 1), style = "width: 100px;" })
                    </td>
                    <td>
                        @Html.CheckBox("chkIsInclGst" + i.ToString(), item.IsInclGst, new { @id = "chkIsInclGst" + (i - 1), style = "width: 80px; height: 18px; padding: 0; text-align:center;" })
                    </td>
                    <td>
                        @Html.TextBox("txtUnitRate" + i.ToString(), item.UnitRate, new { @id = "txtUnitRate" + (i - 1), style = "width: 100px;" })
                    </td>
                    <td>
                        @Html.TextBox("txtFreightRate" + i.ToString(), item.FreightRate, new { @id = "txtFreightRate" + (i - 1), style = "width: 100px;" })
                    </td>
                    <td>
                        @Html.Label("lblNetAmount" + i.ToString(), item.NetAmount.ToString(), new { @id = "NetAmount" + (i - 1) })
                    </td>
                    <td>
                        @Html.Label("lblUnitName" + i.ToString(), item.UnitName, new { @id = "UnitName" + (i - 1) })
                    </td>
                    <td>
                        @Html.Label("lblAmount" + i.ToString(), item.Amount.ToString(), new { @id = "Amount" + (i - 1) })
                    </td>
                    <td>
                        @Html.Label("lblTaxableAmount" + i.ToString(), item.TaxableAmount.ToString(), new { @id = "TaxableAmount" + (i - 1) })
                    </td>
                    <td>
                        @Html.Label("lblVATAmount" + i.ToString(), item.VATAmount.ToString(), new { @id = "VATAmount" + (i - 1) })
                    </td>
                    <td>
                        @Html.Label("lblSATAmount" + i.ToString(), item.SATAmount.ToString(), new { @id = "SATAmount" + (i - 1) })
                    </td>
                    <td>
                        @Html.Label("lblCSTAmount" + i.ToString(), item.CSTAmount.ToString(), new { @id = "CSTAmount" + (i - 1) })
                    </td>
                    <td>
                        @Html.Label("lblFreightAmount" + i.ToString(), item.FreightAmount.ToString(), new { @id = "FreightAmount" + (i - 1) })
                    </td>
                    <td>
                        @Html.Label("lblDelvDateStr" + i.ToString(), item.DelvDateStr, new { @id = "DelvDateStr" + (i - 1) })
                    </td>
                    <td>
                        @Html.TextBox("txtHSNCode" + i.ToString(), item.HSNCode, new { @id = "txtHSNCode" + (i - 1), style = "width: 100px;" })
                    </td>
                    <td>
                        @Html.Label("lblItemRecId" + i.ToString(), item.ItemRecId.ToString(), new { @id = "ItemRecId" + (i - 1) })
                    </td>
                    <td>
                        @Html.Label("lblItemDesc" + i.ToString(), item.ItemDesc, new { @id = "ItemDesc" + (i - 1) })
                    </td>
                    <td>
                        @Html.Label("lblHsQty" + i.ToString(), item.HsQty.ToString(), new { @id = "HsQty" + (i - 1) })
                    </td>
                </tr>
                i++;
            }

        </table>
    </div>

    <div id="orderItems" style="width: 98%;overflow-x: scroll;">
    </div>

    <table class="table table-bordered" style="width:50%;" align="right">
        <tr>
            <td>SubTotal</td>
            <td>
                <label id="lblSubTotal" class="numericfld"></label>
                <span class="error">Invalid SpecialInst!</span>
            </td>
        </tr>
        <tr>
            <td>Discount</td>
            <td>
                <label id="lblDiscount" class="numericfld"></label>
                <span class="error">Invalid RefDetail!</span>
            </td>
        </tr>
        <tr>
            <td>Taxable Amount</td>
            <td>
                <label id="lblTaxableAmount" class="numericfld"></label>
                <span class="error">Invalid RefDetail!</span>
            </td>
        </tr>
        <tr>
            <td>SGST</td>
            <td>
                <label id="lblVATAmount" class="numericfld"></label>
                <span class="error">Invalid RefDetail!</span>
            </td>
        </tr>
        <tr>
            <td>CGST</td>
            <td>
                <label id="lblSATAmount" class="numericfld"></label>
                <span class="error">Invalid RefDetail!</span>
            </td>
        </tr>
        <tr>
            <td>IGST</td>
            <td>
                <label id="lblCSTAmount" class="numericfld"></label>
                <span class="error">Invalid RefDetail!</span>
            </td>
        </tr>
        <tr>
            <td>Grand Total</td>
            <td>
                <label id="lblGrandTotal" class="numericfld"></label>
                <span class="error">Invalid RefDetail!</span>
            </td>
        </tr>
        <tr>
            <td>Freight Amount</td>
            <td>
                <label id="lblFreightAmount" class="numericfld"></label>
                <span class="error">Invalid RefDetail!</span>
            </td>
        </tr>
        <tr>
            <td>
                @Html.DropDownList("ddlOtherChg", ViewBag.OtherChgAcctList as SelectList)
                @@ <input type="text" id="txtOtherChgPer"
                          style="width:50px;text-align:right;" onchange="CalculateAmount()" /> %
            </td>
            <td>
                <label id="lblOtherCharges" class="numericfld"></label>
                <span class="error">Invalid RefDetail!</span>
            </td>
        </tr>
        <tr>
            <td>Net Amount</td>
            <td>
                <label id="lblNetAmount" class="numericfld"></label>
                <span class="error">Invalid RefDetail!</span>
            </td>
        </tr>
        <tr>
            <td>(Less) Others/Adjusted Amount</td>
            <td>
                <input type="text" id="txtAdjAmount" class="numericfld" />
                <span class="error">Invalid RefDetail!</span>
            </td>
        </tr>
        <tr>
            <td>Amount of Tax subject to Reverse Charges</td>
            <td>
                <input type="text" id="txtRevChgTaxAmount" class="numericfld" />
                <span class="error">Invalid RefDetail!</span>
            </td>
        </tr>
    </table>
    <table class="table table-bordered">
        <tr>
            <td>Transport Mode</td>
            <td>
                @Html.DropDownList("ddlTrpMode", new SelectList(lstTrpMode, "Value", "Text"))
                <span class="error">Invalid RefDetail!</span>
            </td>
            <td>Transport Detail</td>
            <td>
                <input type="text" id="txtTrpDetail" />
                <span class="error">Invalid RefDetail!</span>
            </td>
        </tr>
        <tr>
            <td>GR No</td>
            <td>
                <input type="text" id="txtGRNo" />
                <span class="error">Invalid RefDetail!</span>
            </td>
            <td>GR Date</td>
            <td>
                <input type="text" id="txtGRDate" class="datepicker" />
                <span class="error">Invalid RefDetail!</span>
            </td>
        </tr>
        <tr>
            <td>Invoice Note</td>
            <td>
                <input type="text" id="txtInvNote" />
                <span class="error">Invalid RefDetail!</span>
            </td>
            <td>Packing Detail</td>
            <td>
                <input type="text" id="txtPackingDetail" />
                <span class="error">Invalid RefDetail!</span>
            </td>
        </tr>
        <tr>
            <td colspan="4">
                @Html.CheckBox("DisableGST", false, new
                    {
                        @id = "chkDisableGST",
                                    style = "width: 50px; height: 18px; padding: 0; text-align:center;"
                    })Disable GST Validation
            </td>
        </tr>
    </table>
    <div style="padding:10px 0px; text-align:left;">
        <input id="submit" class="btn btn-default" type="button" value='@ViewData["AddEdit"]'>
        @Html.ActionLink("Back to List", "../SaleGSTOthers/Index", null, new { @class = "btn btn-default" })
        @Html.ActionLink("Create New", "CreateUpdate", new { id = 0 },
            new { @style = "display:none;", @class = "btn btn-default", @id = "myLink" })
        @Html.ActionLink("Test Function", null, null,
                       new { onclick = "Testing()", @class = "btn btn-default" })
        <br /><br />
    </div>
</div>

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

@section Scripts{
    <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
    <script type="text/javascript">
        $(function () {
            $("input[type=dropdownlist]").first().focus();
            document.getElementById('ddlSupAddressId').value = '0';
            document.getElementById('txtInvSeries').value = 'D';
            document.getElementById('txtVNo').value = 'New';
            document.getElementById('txtOtherChgPer').value = '0.075';
            performChangeForInvoiceMode();
            SetPayingAuthorityInfo();
            SetConsigneeInfo();
            SetPartyInfo();
        });
    </script>

    <script>
        function Testing() {
            //zzz1
            setDefaultNumericValuesForLedger();
        }
    </script>

    <script type="text/javascript">
        $("#txtItemCode").autocomplete({
            source: function (request, response) {
                var customer = new Array();
                $.ajax({
                    async: false,
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("AutoCompleteAllItemListGroup", "HelpUtility"))",
                    data: { "term": request.term },
                    success: function (data) {
                        for (var i = 0; i < data.length ; i++) {
                            customer[i] = { label: data[i].Value, Id: data[i].Key };
                        }
                    }
                });
                response(customer);
            }, minLength: 2,
            select: function (event, ui) {
                document.getElementById('hfLgrItemId').value = ui.item.Id;
                $.ajax({
                    cache: false,
                    async: false,
                    type: "POST",
                    url: "@(Url.Action("getItemDetail", "HelpUtility"))",
                data: { "itemid": ui.item.Id },
                success: function (data) {
                    $('#txtRate').val(data.purchaserate);
                    $('#ddlUnit').val(data.unit);
                    $('#txtItemDesc').val(data.itemname);
                    document.getElementById('hfItemCode').value = data.itemcode;
                    $('#txtUnitName').val(data.unitname);
                    //$('#lblAmountLgr').text('data.amount);
                    action = data.Action;
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve data.');
                }
                });
                //detail-2
                //fillUnitList(ui.item.Id);
                //
        }
        });
    </script>

    <script>
        function fillUnitList(itemid) {
            //var itemId = $('#ddlItem').val();
            $.ajax({
                cache: false,
                async: false,
                type: "POST",
                url: "@(Url.Action("getTransactionUnitList", "HelpUtility"))",
                data: { "itemid": itemid },
                success: function (data) {
                    //getting multiple records as (key,value) pair type list
                    $("#ddlUnit").empty(); // clear before appending new list
                    $.each(data, function (i, item) {
                        $("#ddlUnit").append($('<option />', {
                            value: item.Key,
                            text: item.Value
                        }));
                    });
                    action = data.Action;
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve states.');
                }
            });
        }
    </script>

    <script type="text/javascript">
        $("#txtPONumber").autocomplete({
            source: function (request, response) {
                //
                document.getElementById('hfPOrderId').value = 0;
                //document.getElementById("ConsgAdrDiv").innerHTML = '';
                //
                var customer = new Array();
                $.ajax({
                    async: false,
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("AutoCompletePurchaseNumbers", "HelpUtility"))",
                    data: { "term": request.term },
                    success: function (data) {
                        for (var i = 0; i < data.length ; i++) {
                            customer[i] = { label: data[i].Value, Id: data[i].Key };
                        }
                    }
                });
                response(customer);
            }, minLength: 2,
            select: function (event, ui) {
                document.getElementById('hfPOrderId').value = ui.item.Id;
                //
                //SetPurchaseOrderInfo(ui.item.Id);
                //
            }
        });
    </script>

    <script>
        function SetConsigneeInfo() {
            var liObj = document.getElementById("ddlConsignee");
            var indexObj = liObj.selectedIndex;
            var consigneeid = liObj.options[indexObj].value;
            $.ajax({
                cache: false,
                async: false,
                type: "POST",
                url: "@(Url.Action("getConsigneeDetail", "SaleGst"))",
                data: { "consigneeid": consigneeid },
                success: function (data) {
                    var addr = '';
                    if (data.Address2.length > 0) {
                        addr = data.Address2;
                    }
                    if (data.Address3.length > 0) {
                        addr += '<br/>'+data.Address3;
                    }
                    if (data.Address4.length > 0) {
                        addr += '<br/>' + data.Address4;
                    }
                    document.getElementById("ConsgAdrDiv").innerHTML = addr;
                    $('#lblConsgState').text(data.StateName);
                    $('#lblConsgStateCode').text(data.StateCode);
                    $('#lblConsgGSTIN').text(data.GSTinNo);
                    action = data.Action;
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve states.');
                }
            });
        }
    </script>

    <script>
        function SetPayingAuthorityInfo() {
            var liObj = document.getElementById("ddlPayingAuthority");
            var indexObj = liObj.selectedIndex;
            var payingauthid = liObj.options[indexObj].value;
            $.ajax({
                cache: false,
                async: false,
                type: "POST",
                url: "@(Url.Action("getPayingAuthorityInfo", "HelpUtility"))",
                data: { "payingauthid": payingauthid },
                success: function (data) {
                    var addr = '';
                    if (data.Address2.length > 0) {
                        addr = data.Address2;
                    }
                    if (data.Address3.length > 0) {
                        addr += '<br/>'+data.Address3;
                    }
                    if (data.Address4.length > 0) {
                        addr += '<br/>' + data.Address4;
                    }
                    document.getElementById("PAuthAdrDiv").innerHTML = addr;
                    $('#lblPAuthState').text(data.StateName);
                    $('#lblPAuthStateCode').text(data.StateCode);
                    $('#lblPAuthGSTIN').text(data.GSTIN);
                    action = data.Action;
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve states.');
                }
            });
        }
    </script>

    <script>
        function SetPartyInfo() {
            var liObj = document.getElementById("ddlParty");
            var indexObj = liObj.selectedIndex;
            var accode = liObj.options[indexObj].value;
            $.ajax({
                cache: false,
                async: false,
                type: "POST",
                url: "@(Url.Action("getPartyDetail", "PartyEntry"))",
                data: { "accode": accode },
                success: function (data) {
                    var addr = '';
                    if (data.Address2.length > 0) {
                        addr = data.Address2;
                    }
                    if (data.Address3.length > 0) {
                        addr += '<br/>'+data.Address3;
                    }
                    if (data.Address4.length > 0) {
                        addr += '<br/>' + data.Address4;
                    }
                    document.getElementById("PartyAdrDiv").innerHTML = addr;
                    $('#lblPartyState').text(data.StateName);
                    $('#lblPartyStateCode').text(data.StateCode);
                    $('#lblPartyGSTIN').text(data.GSTinNo);
                    action = data.Action;
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve states.');
                }
            });
        }
    </script>

    <script>
        function performChangeForInvoiceMode() {
            var liObj = document.getElementById("ddlInvoiceMode");
            var indexObj = liObj.selectedIndex;
            var invMode = liObj.options[indexObj].value;

            var dvExpOpt = document.getElementById("dvExpOpt");
            var dvRemarks = document.getElementById("dvRemarks");

            dvExpOpt.style.display = 'none';
            dvRemarks.style.display = 'none';

            if (invMode.toLowerCase() == 'sup') {
                dvRemarks.style.display = 'block';
                if ($('#txtSRemarks').val().trim() == '') {
                    $('#txtSRemarks').val('Supplementary Invoice with reference to Original Invoice No: GST/INV/..., Dated: ...');
                }
            }
            else if (invMode.toLowerCase() == 'exp') {
                dvExpOpt.style.display = 'block';
            }
        }
    </script>

    <script>
        function round(value, decimals) {
            //example: round(1.005, 2); //returns 1.01
            return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);
        }

        function setDefaultNumericValuesForLedger() {
            //zzz
            $("#StepsTable tr").each(function (indx, item) {
                if (index > -1) {
                    var tds = $(this).find("td");

                    //to set in label $('#lblAmountLgr').text('data.amount');
                    //to get by label $('#lblAmountLgr').html();

                    //to set in textbox $('#txtRate').val(data.purchaserate);
                    //to get by textbox $('#txtRate' + (indx - 1)).val();

                    var _itemslno = $('#lblItemSlNo' + (indx - 1)).val();
                    var _itemcode = $('#lblItemCode' + (indx - 1)).val();
                    var _consgname = $('#lblConsigneeName' + (indx - 1)).val();
                    var _ordqty = $('#lblOrdQty' + (indx - 1)).val();
                    var _dspqty = $('#lblDspQty' + (indx - 1)).val();
                    var _remqty = $('#lblRemQty' + (indx - 1)).val();
                    var _netamount = $('#lblNetAmount' + (indx - 1)).val();
                    var _amount = $('#lblAmount' + (indx - 1)).val();
                    var _taxableamount = $('#lblTaxableAmount' + (indx - 1)).val();
                    var _vatamount = $('#lblVATAmount' + (indx - 1)).val();
                    var _satamount = $('#lblSATAmount' + (indx - 1)).val();
                    var _cstamount = $('#lblCSTAmount' + (indx - 1)).val();
                    var _freightamount = $('#lblFreightAmount' + (indx - 1)).val();
                    var _delvdatestr = $('#lblDelvDateStr' + (indx - 1)).val();
                    var _itemrecid = $('#lblItemRecId' + (indx - 1)).val();
                    var _itemdesc = $('#lblItemDesc' + (indx - 1)).val();
                    var _hsqty = $('#lblHsQty' + (indx - 1)).val();
                    var _lrecid = $('#lblLRecId' + (indx - 1)).val();

                    var _rate = $('#txtRate' + (indx - 1)).val();
                    var _qty = $('#txtQty' + (indx - 1)).val();
                    var _discount = $('#txtDiscount' + (indx - 1)).val();
                    var _rate = $('#txtRate' + (indx - 1)).val();
                    var _vatper = $('#txtVATPer' + (indx - 1)).val();
                    var _satper = $('#txtSATPer' + (indx - 1)).val();
                    var _cstper = $('#txtCSTPer' + (indx - 1)).val();
                    var _isinclgst = $(tds).eq(12).find("input").is(':checked');
                    var _unitrate = $('#txtUnitRate' + (indx - 1)).val();
                    var _freightrate = $('#txtFreightRate' + (indx - 1)).val();
                    var _hsncode = $('#txtHSNCode' + (indx - 1)).val();
                }
            });

        //if ($('#txtRate').val().trim() == '' || isNaN($('#txtRate').val().trim())) {
        //    $('#txtRate').val('0');
        //}
        //if ($('#txtQty').val().trim() == '' || isNaN($('#txtQty').val().trim())) {
        //    $('#txtQty').val('0');
        //}
        //if ($('#txtUnitRate').val().trim() == '' || isNaN($('#txtUnitRate').val().trim())) {
        //    $('#txtUnitRate').val('0');
        //}
        //if ($('#txtFreightRate').val().trim() == '' || isNaN($('#txtFreightRate').val().trim())) {
        //    $('#txtFreightRate').val('0');
        //}
        //if ($('#txtVATPer').val().trim() == '' || isNaN($('#txtVATPer').val().trim())) {
        //    $('#txtVATPer').val('0');
        //}
        //if ($('#txtSATPer').val().trim() == '' || isNaN($('#txtSATPer').val().trim())) {
        //    $('#txtSATPer').val('0');
        //}
        //if ($('#txtCSTPer').val().trim() == '' || isNaN($('#txtCSTPer').val().trim())) {
        //    $('#txtCSTPer').val('0');
        //}
        //if ($('#txtDiscount').val().trim() == '' || isNaN($('#txtDiscount').val().trim())) {
        //    $('#txtDiscount').val('0');
        //}
            }

        function setDefaultNumericValuesForSale() {
            if ($('#txtAdjAmount').val().trim() == '' || isNaN($('#txtAdjAmount').val().trim())) {
                $('#txtAdjAmount').val('0');
            }
            if ($('#txtRevChgTaxAmount').val().trim() == '' || isNaN($('#txtRevChgTaxAmount').val().trim())) {
                $('#txtRevChgTaxAmount').val('0');
            }
            if ($('#txtOtherChgPer').val().trim() == '' || isNaN($('#txtOtherChgPer').val().trim())) {
                $('#txtOtherChgPer').val('0');
            }
            if (document.getElementById('lblGrandTotal').innerHTML.trim() == '' || isNaN(document.getElementById('lblGrandTotal').innerHTML.trim())) {
                $('#lblGrandTotal').text('0');
            }
        }

        function isValidLedgerEntry() {
            //qty
            if (parseFloat($('#txtQty').val().trim()) <= 0) {
                alert('Invalid quantity entered!');
                document.getElementById("txtQty").focus();
                document.getElementById("txtQty").select();
                return false;
            }
            //rate
            if (parseFloat($('#txtRate').val().trim()) <= 0) {
                alert('Invalid rate entered!');
                document.getElementById("txtRate").focus();
                document.getElementById("txtRate").select();
                return false;
            }
            //hsn
            if ($('#txtHSNCode').val().trim() == '') {
                alert('HSN not entered!');
                document.getElementById("txtHSNCode").focus();
                return false;
            }
            //
            var sgstper = parseFloat($('#txtVATPer').val());
            var cngstper = parseFloat($('#txtSATPer').val());
            var igstper = parseFloat($('#txtCSTPer').val());
            if (sgstper + cngstper > 0 && igstper > 0) {
                alert('Only one of SGST + CGST or IGST is applicable!');
                document.getElementById("txtVATPer").focus();
                document.getElementById("txtVATPer").select();
                return false;
            }
            //
            var dsbgst = document.getElementById("chkDisableGST");
            if (dsbgst.checked == false) {
                var statecode = document.getElementById('lblPAuthStateCode').innerText;
                if (statecode.trim() == '') {
                    alert('Paying authority is not selected or state code is not entered for selected paying authority!');
                    return false;
                }
                var ourstcode = '09';//note--assumed for UP to all companies/get from master otherwise
                if (ourstcode == statecode)//intra-state/up-sale
                {
                    if (igstper > 0) {
                        alert('IGST is invalid for sale within state!');
                        document.getElementById("txtCSTPer").focus();
                        document.getElementById("txtCSTPer").select();
                        return false;
                    }
                }
                else// if (ourstcode.ToLower() != statecode.ToLower())//inter-state/ex-up-sale
                {
                    if (sgstper + cngstper > 0) {
                        alert('SGST/CGST is invalid for sale to other state!');
                        document.getElementById("txtVATPer").focus();
                        document.getElementById("txtVATPer").select();
                        return false;
                    }
                }
            }
            //
            return true;
        }

        function isValidSaleEntry() {

            if (parseFloat($('#txtAdjAmount').val()) > 0) {
                lblinfo.Text = "Adjustment amount must be in negative (-ve) value only!";
                document.getElementById("txtAdjAmount").focus();
                document.getElementById("txtAdjAmount").select();
                return false;
            }

            return true;
        }

        function processCalculation() {
            //
            setDefaultNumericValuesForLedger();
            //
            var qty = parseFloat($('#txtQty').val());
            var gstbasicrate = parseFloat($('#txtRate').val());
            var gstunitrate = parseFloat($('#txtUnitRate').val());
            var frtrate = parseFloat($('#txtFreightRate').val());
            var sgstper = parseFloat($('#txtVATPer').val());
            var cngstper = parseFloat($('#txtSATPer').val());
            var igstper = parseFloat($('#txtCSTPer').val());
            var sgstamt = 0;
            var cngstamt = 0;
            var igstamt = 0;
            //
            //note--discount is discountPerUnit
            var disamtlgr = parseFloat($('#txtDiscount').val()) * qty;
            var gstamount = qty * gstbasicrate;
            var gtaxableamt = 0;
            var frtamt = frtrate * qty;
            //
            var inclGST = document.getElementById("chkIsInclGST");
            if (inclGST.checked == false) {
                //exclusive-gst calculation
                gtaxableamt = gstamount - disamtlgr;
                sgstamt = gtaxableamt * sgstper / 100;
                cngstamt = gtaxableamt * cngstper / 100;
                igstamt = gtaxableamt * igstper / 100;
                var urate = gstbasicrate + gstbasicrate * sgstper / 100 + gstbasicrate * cngstper / 100 + gstbasicrate * igstper / 100;
                $('#txtUnitRate').val(round(urate, 2));
                $('#lblAmountLgr').text(round(gstamount, 2));
                $('#lblVATAmountLgr').text(round(sgstamt, 2));
                $('#lblSATAmountLgr').text(round(cngstamt, 2));
                $('#lblCSTAmountLgr').text(round(igstamt, 2));
                $('#lblTaxableAmountLgr').text(round(gtaxableamt, 2));
                var k = parseFloat(gtaxableamt + sgstamt + cngstamt + igstamt + frtamt);
                $('#lblNetAmountLgr').text(round(k, 2));
            }
            else {
                //inclusive-gst calculation
                //getting basic rate
                var brate = (gstunitrate * 100) / (100 + sgstper + cngstper + igstper);
                $('#txtRate').val(round(brate, 2));
                gstamount = brate * qty;
                gtaxableamt = gstamount - disamtlgr;
                //calculating taxes
                sgstamt = gtaxableamt * sgstper / 100;
                cngstamt = gtaxableamt * cngstper / 100;
                igstamt = gtaxableamt * igstper / 100;
                //setting values
                $('#lblAmountLgr').text(round(gstamount, 2));
                $('#lblVATAmountLgr').text(round(sgstamt, 2));
                $('#lblSATAmountLgr').text(round(cngstamt, 2));
                $('#lblCSTAmountLgr').text(round(igstamt, 2));
                $('#lblTaxableAmountLgr').text(round(gtaxableamt, 2));
                var k = parseFloat(gtaxableamt + sgstamt + cngstamt + igstamt + frtamt);
                $('#lblNetAmountLgr').text(round(k, 2));
            }
            $('#lblFreightAmountLgr').text(round(frtamt, 2));
            //
            CalculateAmount();
            //
        }

        function CalculateAmount() {

            var st = 0;
            var vatamt = 0;
            var satamt = 0;
            var cstamt = 0;
            var discamt = 0;
            var frtamt = 0;
            var txblamt = 0;

            $("#myTable tr").each(function (index, item) {
                if (index > -1) {
                    var tds = $(this).find("td");
                    st = parseFloat(st) + parseFloat($(this).closest('tr').find('td:eq(16)').text());
                    vatamt = parseFloat(vatamt) + parseFloat($(this).closest('tr').find('td:eq(19)').text());
                    satamt = parseFloat(satamt) + parseFloat($(this).closest('tr').find('td:eq(20)').text());
                    cstamt = parseFloat(cstamt) + parseFloat($(this).closest('tr').find('td:eq(21)').text());
                    frtamt = parseFloat(frtamt) + parseFloat($(this).closest('tr').find('td:eq(23)').text());
                    txblamt = parseFloat(txblamt) + parseFloat($(this).closest('tr').find('td:eq(18)').text());
                    //discamt = discamt + discount * qty;
                    discamt = parseFloat(discamt) + parseFloat(parseFloat($(this).closest('tr').find('td:eq(17)').text())) * parseFloat(parseFloat($(this).closest('tr').find('td:eq(5)').text()));
                }
            });

            setDefaultNumericValuesForSale();

            $('#lblSubTotal').text(round(st, 2));//Math.Round(igstamt, 0, MidpointRounding.AwayFromZero);
            $('#lblVATAmount').text(round(vatamt, 0));//Math.Round(igstamt, 0, MidpointRounding.AwayFromZero);
            $('#lblSATAmount').text(round(satamt, 0));//Math.Round(igstamt, 0, MidpointRounding.AwayFromZero);
            $('#lblCSTAmount').text(round(cstamt, 0));//Math.Round(igstamt, 0, MidpointRounding.AwayFromZero);
            $('#lblDiscount').text(round(discamt, 2));
            $('#lblFreightAmount').text(round(frtamt, 2));
            $('#lblTaxableAmount').text(round(txblamt, 2));
            var k = parseFloat(st - discamt + round(vatamt, 0) + round(satamt, 0) + round(cstamt, 0));
            $('#lblGrandTotal').text(round(k, 2));

            //other charges calculation
            var d = 0;
            d = parseFloat(document.getElementById('lblGrandTotal').innerText) * parseFloat($('#txtOtherChgPer').val()) / 100;
            //javascript functions: Math.floor, Math.ceil, ceiling value is to be used here
            $('#lblOtherCharges').text(Math.ceil(d));
            //

            var netamt = parseFloat(document.getElementById('lblGrandTotal').innerText) + parseFloat(document.getElementById('lblFreightAmount').innerText) + parseFloat(document.getElementById('lblOtherCharges').innerText);
            //removed for [StrC001] netamt = Math.Round(netamt, 0, MidpointRounding.AwayFromZero);
            //var kx = string.Format("{0:#,###0.00}", netamt);//to set
            var kx = netamt;
            $('#lblNetAmount').text(round(kx, 2));
        }

    </script>

    <script>
        $(".datepicker").datepicker({
             dateFormat: 'dd/mm/yy'
        });


$(document).ready(function () {
var orderItems = [];

    $('#add').click(function () {

    var isValidItem = true;

    if ($('#txtItemCode').val().trim() == '' || $('#hfLgrItemId').val().trim() == 0) {
        isValidItem = false;
        alert('Item not selected!');
        document.getElementById("txtItemCode").focus();
        return;
    }

    setDefaultNumericValuesForLedger();
    if (isValidLedgerEntry() == false) { return; };
    processCalculation();

    isValidItem = true;

    if (isValidItem) {
        var liUnit = document.getElementById("ddlUnit");
        var unitIndex = liUnit.selectedIndex;
        var unitId = liUnit.options[unitIndex].value;
        var unitName = liUnit.options[unitIndex].text;

        //unit name validation
        var uname = unitName;
        if (unitName.includes('/') == true) {
            uname = $('#txtUnitName').val();
            var arr = unitName.split('/');
            if (arr.includes($('#txtUnitName').val()) == false) {
                alert('Invalid unit name entered!');
                document.getElementById("txtUnitName").focus();
                return;
            }
        }
        $('#txtUnitName').val(uname);//d
        //

        var inst = false;
        var inclx = document.getElementById("chkIsInclGST");
        var inclg = inclx.checked;

        orderItems.push({
            ItemRecId: 0,
            LgrItemId: $('#hfLgrItemId').val(),
            ItemCode: $('#hfItemCode').val(),
            ItemDesc: $('#txtItemDesc').val(),
            NoOfPckg: $('#txtNoOfPckg').val(),
            Qty: parseFloat($('#txtQty').val().trim()),
            DelvQty: 0,
            InspCertificate: '',
            DispatchMemo: '',
            ExciseDutyPer: 0,
            ExciseDutyAmount: 0,
            EntryTaxPer: 0,
            EntryTaxAmount: 0,
            FreightRate: parseFloat($('#txtFreightRate').val().trim()),
            FreightAmount: parseFloat(document.getElementById('lblFreightAmountLgr').innerText),
            ExciseDutyInc: 0,
            SaleTaxInc: inst,
            Remarks: '',
            Rate: parseFloat($('#txtRate').val().trim()),
            Amount: parseFloat(document.getElementById('lblAmountLgr').innerText),
            Discount: parseFloat($('#txtDiscount').val().trim()),
            TaxableAmount: parseFloat(document.getElementById('lblTaxableAmountLgr').innerText),
            VATPer: parseFloat($('#txtVATPer').val().trim()),
            VATAmount: parseFloat(document.getElementById('lblVATAmountLgr').innerText),
            SATPer: parseFloat($('#txtSATPer').val().trim()),
            SATAmount: parseFloat(document.getElementById('lblSATAmountLgr').innerText),
            CSTPer: parseFloat($('#txtCSTPer').val().trim()),
            CSTAmount: parseFloat(document.getElementById('lblCSTAmountLgr').innerText),
            IsInclGst: inclg,
            UnitRate: parseFloat($('#txtUnitRate').val().trim()),
            Unit: unitId,
            UnitName: uname,//note
            NetAmount: parseFloat(document.getElementById('lblNetAmountLgr').innerText),
            LRecId: parseFloat($('#hfLRecId').val().trim()),
            HSNCode: $('#txtHSNCode').val().trim()
        });

        //Clear fields
        $('#hfLgrItemId').val('').focus();
        //$('#txtQty,#txtRate').val('');

    }
    //populate order items

        GeneratedItemsTable();
    });

    //Save button click function
    $('#submit').click(function () {

    //validation of order
    var isAllValid = true;

    if (orderItems.length == 0) {
        $('#orderItems').html('<span style="color:red;">Please add items</span>');
        isAllValid = false;
    }

    setDefaultNumericValuesForSale();
    if (isValidSaleEntry() == false) { return; };
    CalculateAmount();

    isAllValid = true;

    //Save if valid
    if (isAllValid) {

        var liCC = document.getElementById("ddlCashCredit");
        var ccIndex = liCC.selectedIndex;
        var CCId = liCC.options[ccIndex].value;

        var liVT = document.getElementById("ddlChInv");
        var vtIndex = liVT.selectedIndex;
        var chinv = liVT.options[vtIndex].value;
        var vt = 'g' + chinv;

        var liOTC = document.getElementById("ddlOtherChg");
        var otcIndex = liOTC.selectedIndex;
        var otc = liOTC.options[otcIndex].value;

        var liTrpMode = document.getElementById("ddlTrpMode");
        var tpmIndex = liTrpMode.selectedIndex;
        var trpmode = liTrpMode.options[tpmIndex].value;

        var liSupType = document.getElementById("ddlSupTypeCode");
        var supTypeIndex = liSupType.selectedIndex;
        var suptypecode = liSupType.options[supTypeIndex].value;

        var liDocType = document.getElementById("ddlDocTypeCode");
        var docTypeIndex = liDocType.selectedIndex;
        var doctypecode = liDocType.options[docTypeIndex].value;

        var liSupAddr = document.getElementById("ddlSupAddressId");
        var supAddrIndex = liSupAddr.selectedIndex;
        var supaddressid = liSupAddr.options[supAddrIndex].value;

        var liParty = document.getElementById("ddlParty");
        var partyIndex = liParty.selectedIndex;
        var accode = liParty.options[partyIndex].value;

        var liPayingAuth = document.getElementById("ddlPayingAuthority");
        var payingAuthIndex = liPayingAuth.selectedIndex;
        var payingauthid = liPayingAuth.options[payingAuthIndex].value;

        var liConsg = document.getElementById("ddlConsignee");
        var consgIndex = liConsg.selectedIndex;
        var consigneeid = liConsg.options[consgIndex].value;

        if (supaddressid == 0) {
            alert('Supply address not selected!');
            document.getElementById("ddlSupAddressId").focus();
            return;
        }

        CalculateAmount();

        var data = {
            //order fields
            SaleRecId: parseInt($('#hfSaleRecId').val().trim()),
            VType: vt,
            VNo: parseFloat($('#txtVNo').val().trim()),
            ChInv: chinv,
            InvoiceMode: 'x',//to set later,
            VDate: $('#txtVDate').val().trim(),
            CashCredit: CCId,
            AcCode: parseInt(accode),
            Form38No: '',
            FormCNo: '',
            SubTotal: parseFloat(document.getElementById('lblSubTotal').innerText),
            BEDAdvPer: '0',
            BEDAdvAmount: '0',
            EduCessPer: '0',
            EduCessAmount: '0',
            SheCessPer: '0',
            SheCessAmount: '0',
            ExciseDutyAmount: '0',
            VATAmount: parseFloat(document.getElementById('lblVATAmount').innerText),
            SATAmount: parseFloat(document.getElementById('lblSATAmount').innerText),
            CSTAmount: parseFloat(document.getElementById('lblCSTAmount').innerText),
            EntryTaxAmount: '0',
            FreightAmount: parseFloat(document.getElementById('lblFreightAmount').innerText),
            AdjAmount: parseFloat($('#txtAdjAmount').val().trim()),
            OtherCharges: parseFloat(document.getElementById('lblOtherCharges').innerText),
            Discount: parseFloat(document.getElementById('lblDiscount').innerText),
            TaxableAmount: parseFloat(document.getElementById('lblTaxableAmount').innerText),
            NetAmount: parseFloat(document.getElementById('lblNetAmount').innerText),
            GRNo: $('#txtGRNo').val().trim(),
            GRDate: $('#txtGRDate').val().trim(),
            TrpMode: trpmode,
            TrpDetail: $('#txtTrpDetail').val().trim(),
            POrderId: '0',
            ConsigneeId: parseInt(consigneeid),
            PayingAuthId: parseInt(payingauthid),
            RemovalDateTime: '',
            MADate: '',
            MANo: $('#txtMANo').val().trim(),
            TarrifHeading: '',
            CertOption: '0',
            B1LetterNo: '',
            B1LetterDate: '',
            B1Agent: '',
            B2LetterNo: '',
            B2LetterDate: '',
            B2Agent: '',
            IssueDateTime: '',
            RemovalTimeInWords: '',
            TrfCompCode: '0',//parseFloat($('#txtQty').val().trim()),
            IntPONumber: $('#txtIntPONumber').val().trim(),
            IntPODate: $('#txtIntPODate').val().trim(),
            Remarks: '0',
            BillPODesc: '0',
            ElctRefNo: $('#txtElctRefNo').val().trim(),
            ElctRefDate: $('#txtElctRefDate').val().trim(),
            RevChgTaxAmount: parseFloat($('#txtRevChgTaxAmount').val().trim()),
            PackingDetail: $('#txtPackingDetail').val().trim(),
            TaxType: 'g',
            InvNote: $('#txtInvNote').val().trim(),
            Remarks: $('#txtSRemarks').val().trim(),
            RNoteInfo: '',
            OtherChgAcCode: otc,
            InvReferenceNo: $('#txtInvReferenceNo').val().trim(),
            PrecDocNo: $('#txtPrecDocNo').val().trim(),
            PrecDocDate: $('#txtPrecDocDate').val().trim(),
            SupTypeCode: suptypecode,
            DocTypeCode: doctypecode,
            SupAddressId: supaddressid,
            DistanceKM: parseFloat($('#txtDistanceKM').val().trim()),
            OtherChgPer: parseFloat($('#txtOtherChgPer').val().trim()),
            //ledger fields
            Ledgers: orderItems
        }

        $(this).val('Please wait...');

        $.ajax({
        url: '/SaleGSTOthers/CreateUpdate',
        type: "POST",
        data: JSON.stringify(data),
        dataType: "JSON",
        contentType: "application/json",
        success: function (d) {
        //check is successfully save to database
        if (d.status == true) {
            //will send status from server side
            alert(d.message);
            //clear form
            orderItems = [];
            //$('#orderNo').val('');
            //$('#orderDate').val('');
            $('#orderItems').empty();
            //reload/refresh
            window.location.href = document.getElementById('myLink').href;
        }
        else {
            alert(d.message);
        }
            $('#submit').val(d.AddEdit);
        },
        error: function () {
            alert('Error. Please try again.');
                //$('#submit').val('Save');
                $('#submit').val(d.AddEdit);
            }
        });
        }

    });

    //edit mode
    $(function () {
        var mainObject = @Html.Raw(Json.Encode(Model))
        orderItems = @Html.Raw(Json.Encode(Model.Ledgers))
        //
        hfSaleRecId.value = mainObject.SaleRecId;
        txtVNo.value = mainObject.VNo;
        txtVDate.value = mainObject.VDate.substring(0, 10);
        ddlParty.value = mainObject.AcCode;
        txtInvSeries.value = mainObject.InvSeries;
        document.getElementById('lblSubTotal').innerHTML = mainObject.SubTotal;
        document.getElementById('lblVATAmount').innerHTML = mainObject.VATAmount;
        document.getElementById('lblSATAmount').innerHTML = mainObject.SATAmount;
        document.getElementById('lblCSTAmount').innerHTML = mainObject.CSTAmount;
        document.getElementById('lblFreightAmount').innerHTML = mainObject.FreightAmount;
        txtAdjAmount.value = mainObject.AdjAmount;
        txtOtherChgPer.value = mainObject.OtherChgPer;
        document.getElementById('lblOtherCharges').innerHTML = mainObject.OtherCharges;
        document.getElementById('lblDiscount').innerHTML = mainObject.Discount;
        document.getElementById('lblTaxableAmount').innerHTML = mainObject.TaxableAmount;
        document.getElementById('lblNetAmount').innerHTML = mainObject.NetAmount;
        txtGRNo.value = mainObject.GRNo;
        txtGRDate.value = mainObject.GRDate.substring(0, 10);
        ddlTrpMode.value = mainObject.TrpMode;
        txtTrpDetail.value = mainObject.TrpDetail;
        ddlPayingAuthority.value = mainObject.PayingAuthId;
        ddlConsignee.value = mainObject.ConsigneeId;
        hfPOrderId.value = mainObject.POrderId;
        txtPONumber.value = mainObject.PONumber;
        txtMANo.value = mainObject.MANo;
        txtElctRefNo.value = mainObject.ElctRefNo;
        txtElctRefDate.value = mainObject.ElctRefDate.substring(0,10);
        txtRevChgTaxAmount.value = mainObject.RevChgTaxAmount;
        txtPackingDetail.value = mainObject.PackingDetail;
        txtInvNote.value = mainObject.InvNote;
        txtSRemarks.value = mainObject.Remarks;
        txtInvReferenceNo.value = mainObject.InvReferenceNo;
        txtPrecDocNo.value = mainObject.PrecDocNo;
        txtPrecDocDate.value = mainObject.PrecDocDate.substring(0, 10);
        ddlSupTypeCode.value = mainObject.SupTypeCode;
        ddlSupAddressId.value = mainObject.SupAddressId;
        ddlOtherChg.value = mainObject.OtherChgAcCode;
        //
        performChangeForInvoiceMode();
        GeneratedItemsTable();//includes process calculation
    });

    //function for show added items in table
    function GeneratedItemsTable() {
        if (orderItems.length > 0) {
            var $table = $('<table class="tablecontainer" id="myTable"/>');
            //
            $table.append('<th>S.No.</th>');//0
            $table.append('<th colspan=2>Action</th>');//1=Remove
            //$table.append('<th>&nbsp;</th>');//2=Edit
            $table.append('<th>Item&nbsp;Code&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>');//3
            $table.append('<th>Item&nbsp;Description&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>');//4
            $table.append('<th>Quantity&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>');//5
            $table.append('<th>Unit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>');//6
            $table.append('<th>Rate&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>');//7
            $table.append('<th>IsInclGST&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>');//8
            $table.append('<th>UnitRate&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>');//9
            $table.append('<th>SGST%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>');//10
            $table.append('<th>CGST%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>');//11
            $table.append('<th>IGST%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>');//12
            $table.append('<th>NetAmount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>');//13
            $table.append('<th>HSN/SAC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>');//14
            //
            $table.append('<td style="visibility:hidden;width:0px;border-color:transparent;">NoOfPckg</td>');//15
            $table.append('<td style="visibility:hidden;width:0px;border-color:transparent;">Amount</td>');//16
            $table.append('<td style="visibility:hidden;width:0px;border-color:transparent;">Discount</td>');//17
            $table.append('<td style="visibility:hidden;width:0px;border-color:transparent;">TaxableAmount</td>');//18
            $table.append('<td style="visibility:hidden;width:0px;border-color:transparent;">SGST</td>');//19
            $table.append('<td style="visibility:hidden;width:0px;border-color:transparent;">CGST</td>');//20
            $table.append('<td style="visibility:hidden;width:0px;border-color:transparent;">IGST</td>');//21
            $table.append('<td style="visibility:hidden;width:0px;border-color:transparent;">FreightRate</td>');//22
            $table.append('<td style="visibility:hidden;width:0px;border-color:transparent;">FreightAmount</td>');//23
            //
            $table.append('<td style="visibility:hidden;width:0px;border-color:transparent;">LgrItemId</td>');//24
            $table.append('<td style="visibility:hidden;width:0px;border-color:transparent;">Unit</td>');//25
            $table.append('<td style="visibility:hidden;width:0px;border-color:transparent;">LRecId</td>');//26
            $table.append('<td style="visibility:hidden;width:0px;border-color:transparent;">ItemRecId</td>');//27
            //
            $table.append('</tr></thead>');
            var $tbody = $('<tbody/>');
            $.each(orderItems, function (i, val) {
            var $row = $('<tr/>');
            //static for all rows---------------
                $row.append($('<td/>').html(i + 1));//0
                //
                var $remove = $('<a href="#"><i class="fa fa-trash-o" style="font-size:15pt;"></a>');
                $remove.click(function (e) {
                    var opt = confirm("Are you sure to delete this entry?");
                    if (opt == true) {
                        e.preventDefault();
                        deleteLedgerItem(val.LRecId);
                        orderItems.splice(i, 1);
                        GeneratedItemsTable();
                    }
                });
                $row.append($('<td/>').html($remove));//1
                //--------------------------------------------
                var $edit = $('<a href="#"><i class="fa fa-pencil-square" style="font-size:25pt;"></a>');
                $edit.click(function (e) {
                    e.preventDefault();
                    //
                    txtItemCode.value = $(this).closest('tr').find('td:eq(3)').text();
                    hfItemCode.value = $(this).closest('tr').find('td:eq(3)').text();
                    txtItemDesc.value = $(this).closest('tr').find('td:eq(4)').text();
                    txtQty.value = $(this).closest('tr').find('td:eq(5)').text();
                    txtUnitName.value = $(this).closest('tr').find('td:eq(6)').text();
                    txtRate.value = $(this).closest('tr').find('td:eq(7)').text();

                    //IsInclGST.value = $(this).closest('tr').find('td:eq(6)').is(':checked');//$(this).closest('tr').find('td:eq(7)').text();
                    chkIsInclGST.checked = $(this).closest('tr').find('td:eq(8)').text();

                    txtUnitRate.value = $(this).closest('tr').find('td:eq(9)').text();
                    txtVATPer.value = $(this).closest('tr').find('td:eq(10)').text();
                    txtSATPer.value = $(this).closest('tr').find('td:eq(11)').text();
                    txtCSTPer.value = $(this).closest('tr').find('td:eq(12)').text();
                    lblNetAmountLgr.value = $(this).closest('tr').find('td:eq(13)').text();
                    txtHSNCode.value = $(this).closest('tr').find('td:eq(14)').text();
                    //
                    txtNoOfPckg.value = $(this).closest('tr').find('td:eq(15)').text();
                    lblAmountLgr.value = $(this).closest('tr').find('td:eq(16)').text();
                    txtDiscount.value = $(this).closest('tr').find('td:eq(17)').text();
                    lblTaxableAmountLgr.value = $(this).closest('tr').find('td:eq(18)').text();
                    lblVATAmountLgr.value = $(this).closest('tr').find('td:eq(19)').text();
                    lblSATAmountLgr.value = $(this).closest('tr').find('td:eq(20)').text();
                    lblCSTAmountLgr.value = $(this).closest('tr').find('td:eq(21)').text();
                    txtFreightRate.value = $(this).closest('tr').find('td:eq(22)').text();
                    lblFreightAmountLgr.value = $(this).closest('tr').find('td:eq(23)').text();
                    //
                    hfLgrItemId.value = $(this).closest('tr').find('td:eq(24)').text();//LgrItemId
                    //fillUnitList($(this).closest('tr').find('td:eq(13)').text());
                    //note: fill unitlist if required
                    //fillUnitList(hfLgrItemId.value);
                    ddlUnit.value = $(this).closest('tr').find('td:eq(25)').text();//UnitId
                    hfLRecId.value = $(this).closest('tr').find('td:eq(26)').text();//LRecId
                    hfItemRecId.value = $(this).closest('tr').find('td:eq(27)').text();//ItemRecId
                    //
                    orderItems.splice(i, 1);
                    GeneratedItemsTable();
                });
                //--------------------------------------------
                $row.append($('<td/>').html($edit));//2
                $row.append($('<td/>').html(val.ItemCode));//3
                $row.append($('<td/>').html(val.ItemDesc));//4
                $row.append($('<td/>').html(val.Qty));//5
                $row.append($('<td/>').html(val.UnitName));//6
                $row.append($('<td/>').html(val.Rate));//7
                $row.append($('<td/>').html(val.IsInclGst));//8
                $row.append($('<td/>').html(val.UnitRate));//9
                $row.append($('<td/>').html(val.VATPer));//10
                $row.append($('<td/>').html(val.SATPer));//11
                $row.append($('<td/>').html(val.CSTPer));//12
                $row.append($('<td/>').html(val.NetAmount));//13
                $row.append($('<td/>').html(val.HSNCode));//14
                //--------------------------------------------
                $row.append($('<td style="visibility:hidden;width:0px;border-color:transparent;" />').html(val.NoOfPckg));//15
                $row.append($('<td style="visibility:hidden;width:0px;border-color:transparent;" />').html(val.Amount));//16
                $row.append($('<td style="visibility:hidden;width:0px;border-color:transparent;" />').html(val.Discount));//17
                $row.append($('<td style="visibility:hidden;width:0px;border-color:transparent;" />').html(val.TaxableAmount));//18
                $row.append($('<td style="visibility:hidden;width:0px;border-color:transparent;" />').html(val.VATAmount));//19
                $row.append($('<td style="visibility:hidden;width:0px;border-color:transparent;" />').html(val.SATAmount));//20
                $row.append($('<td style="visibility:hidden;width:0px;border-color:transparent;" />').html(val.CSTAmount));//21
                $row.append($('<td style="visibility:hidden;width:0px;border-color:transparent;" />').html(val.FreightRate));//22
                $row.append($('<td style="visibility:hidden;width:0px;border-color:transparent;" />').html(val.FreightAmount));//23
                //
                $row.append($('<td style="visibility:hidden;width:0px;border-color:transparent;" />').html(val.LgrItemId));//24
                $row.append($('<td style="visibility:hidden;width:0px;border-color:transparent;" />').html(val.Unit));//25
                $row.append($('<td style="visibility:hidden;width:0px;border-color:transparent;" />').html(val.LRecId));//26
                $row.append($('<td style="visibility:hidden;width:0px;border-color:transparent;" />').html(val.ItemRecId));//27
                //
                $tbody.append($row);
            });
            console.log("current", orderItems);
                $table.append($tbody);
                $('#orderItems').html($table);
            }
            else {
                    $('#orderItems').html('');
            }
        processCalculation();
        }//
    });

    </script>
}


