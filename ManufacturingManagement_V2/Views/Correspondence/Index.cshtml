@model IEnumerable<ManufacturingManagement_V2.Models.CorrespondenceMdl>

@{
    ViewBag.Title = "Index";
    Layout = "~/views/shared/_LayoutCommon.cshtml";
}

<h4><b>Correspondence List  - * Under Testing</b></h4>
@*<div style="font-size:14pt;color:black;background-color:yellow;text-align:center;">
    <b>Correspondence List  - * Under Testing</b>
</div>*@

<p>
    @Html.ActionLink("Create New", "CreateUpdate", null, new { @class = "btn btn-default" })
</p>

<h5><b><label onclick="ShowHideDiv(options)">Search Options</label></b></h5>
<div id="options" style="display:block;">
    <fieldset>
        @using (Ajax.BeginForm("FilterIndex", "Correspondence", new AjaxOptions { UpdateTargetId = "divFilter" }))
        {
            <div class="form-group">
                <table class="table table-bordered">
                    <tr>
                        <td><b>Company</b></td>
                        <td>
                            @Html.DropDownList("ddlCompany", ViewBag.CompanyList as SelectList, "--Select--",
                    new { @onclick = "fillMDocList()" })
                        </td>
                        <td><b>Search Text</b></td>
                        <td>@Html.TextBox("txtSearchText", null, new { @placeholder = "Type search text here" })</td>
                    </tr>
                    <tr>
                        <td><b>Financial Year</b></td>
                        <td>@Html.DropDownList("ddlFinYear", ViewBag.FinYearList as SelectList, "--Select--")</td>
                        <td><b>Search For</b></td>
                        <td>@Html.DropDownList("ddlSearchField", ViewBag.SearchFieldList as SelectList)</td>
                    </tr>
                    <tr>
                        <td><b>Department</b></td>
                        <td>@Html.DropDownList("ddlDepartment", ViewBag.DepartmentList as SelectList, "--Select--")</td>
                        <td><b>From</b></td>
                        <td>@Html.TextBox("txtDtFrom", null, new { @class = "datepicker" })</td>
                    </tr>
                    <tr>
                        <td><b>Master Doc. Name</b></td>
                        <td>@Html.DropDownList("ddlMDocList", ViewBag.MDocList as SelectList, "--Select--")</td>
                        <td><b>To</b></td>
                        <td>@Html.TextBox("txtDtTo", null, new { @class = "datepicker" })</td>
                    </tr>
                    <tr>
                        <td><b>Letter Series</b></td>
                        <td>@Html.DropDownList("ddlSeries", ViewBag.LetterSeriesList as SelectList)</td>
                        <td><b>Apply Date Filter</b></td>
                        <td><input type="checkbox" name="chkFilterByDT" @if (ViewBag.FilterByDT) { <text> checked</text>} style="width: 80px; height: 20px; padding: 0; text-align:center;"></td>
                    </tr>
                </table>
        </div>
        <button class="btn btn-default">Submit</button>
    }
    </fieldset>
</div>
<br />
<table class="tablecontainer" style="border-width:1px;border-color:black;width:100%;">
    <tr>
        <th style="width:30px;">
            S.No.
        </th>
        <th style="width:60px;">
            Company<br />Department<br />[Fin.Year]/Date
        </th>
        <th style="width:210px;">
            MDocName/LetterNo<br />User
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PartyName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CorpAddress)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ContactPerson)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CorpSubject)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Keywords)
        </th>
        <th style="width:60px;">Action Links</th>
    </tr>
    @{int i = 1;}
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @i
            </td>
            <td>
                @Html.DisplayFor(model => item.CmpName)
                <br />@Html.DisplayFor(model => item.Department)
                <br />[@Html.DisplayFor(model => item.FinYear)]
                <br />@Html.ValueFor(model => item.LetterDT, "{0:dd/MM/yyyy}")
            </td>
            <td>
                @Html.DisplayFor(model => item.DocumentName)
                <br />@Html.DisplayFor(model => item.LetterNo)
                <br />@Html.DisplayFor(model => item.UserName)
            </td>
            <td>
                @Html.DisplayFor(model => item.PartyName)
            </td>
            <td>
                @Html.DisplayFor(model => item.CorpAddress)
            </td>
            <td>
                @Html.DisplayFor(model => item.ContactPerson)
            </td>
            <td>
                @Html.DisplayFor(model => item.CorpSubject)
            </td>
            <td>
                @Html.DisplayFor(model => item.Keywords)
            </td>
            <td>
                @Html.Raw(item.DocumentURL)
                @Html.ActionLink("Edit_Record", "CreateUpdate", new { id = item.RecId })
                @if (item.Series.ToLower() == "d")
                {
                    @Html.ActionLink("Convert_To_Main", null, new { recid = item.RecId },
                        new { onclick = "convertToMain('" + item.RecId + "')" })
                }
                @Html.ActionLink("View_UpdateLog", "../EventLogReport/getLogDetail",
                    new { tblid = 53, pkval = item.RecId }, new { @target = "_blank" })
                <br />---------------------
                @Html.ActionLink("View_Attachments", "../Correspondence/Downloads", new { recid = item.RecId, letterno = item.LetterNo }, new { target = "_blank" })
                @Html.ActionLink("Upload_Attachments", "../Correspondence/UploadFile", new { id = item.RecId, letterno = item.LetterNo }, new { @target = "_new;" })
                <br />---------------------
            </td>
        </tr>
        i++;
    }
    @{i = i - 1;}
    <b>@i.ToString()&nbsp;&nbsp;&nbsp;Letter(s) found.</b>
</table>

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

@section Scripts{

    <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
    <script type="text/javascript">
        $(function () {
            $("input[type=text]").first().focus();
            //document.getElementById("txtAttDay").focus();
            document.getElementById("txtDtFrom").value = '@ViewBag.dtfrom';
            document.getElementById("txtDtTo").value = '@ViewBag.dtto';
            document.getElementById("ddlSeries").value = '@ViewBag.Series';
            document.getElementById("txtSearchText").value = '@ViewBag.SearchText';
            document.getElementById("ddlSearchField").value = '@ViewBag.SearchFor';
        });
    </script>

    <script type="text/javascript">
        $(".datepicker").datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: "dd/mm/yy"
        });
    </script>

    <script type="text/javascript">
        function ShowHideDiv(id) {
            if (id.style.display == "block") {
                id.style.display = "none";
            }
            else {
                id.style.display = "block";
            }
        }
    </script>

    <script type="text/javascript">
        $("#txtCaseFileNo").autocomplete({
            source: function (request, response) {
                var customer = new Array();
                var liObj = document.getElementById("ddlCompany");
                var objIndex = liObj.selectedIndex;
                var objId = liObj.options[objIndex].value;
                //var objName = liObj.options[objIndex].text;//OK
                $.ajax({
                    async: false,
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("AutoCompleteCaseFileNos", "HelpUtility"))",
                data: { "term": request.term, "compcode": objId },
                success: function (data) {
                    for (var i = 0; i < data.length ; i++) {
                        customer[i] = { label: data[i].Value, Id: data[i].Key };
                    }
                }
            });
            response(customer);
        }, minLength: 1,
        select: function (event, ui) {
            //document.getElementById('POrderId').value = ui.item.Id;//no need
        }
    });
    </script>

    <script type="text/javascript">
        $("#txtReferenceFileNo").autocomplete({
            source: function (request, response) {
                var customer = new Array();
                var liObj = document.getElementById("ddlCompany");
                var objIndex = liObj.selectedIndex;
                var objId = liObj.options[objIndex].value;
                //var objName = liObj.options[objIndex].text;//OK
                $.ajax({
                    async: false,
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("AutoCompleteReferenceFileNos", "HelpUtility"))",
                    data: { "term": request.term, "compcode": objId },
                    success: function (data) {
                        for (var i = 0; i < data.length ; i++) {
                            customer[i] = { label: data[i].Value, Id: data[i].Key };
                        }
                    }
                });
                response(customer);
            }, minLength: 1,
            select: function (event, ui) {
                //document.getElementById('POrderId').value = ui.item.Id;//no need
            }
        });
    </script>

    <script>
        function convertToMain(recid) {
            var a = confirm("Are you sure to convert to main?");
            if (a == false) {
                return;
            }
            $.ajax({
                type: 'POST',
                url: '@Url.Action("convertDraftCorrespondenceToMain", "Correspondence")',
                dataType: 'html',
                data: ({
                    //insert your parameters to pass to controller
                    recid: recid
                }),
                success: function () {
                    //alert("Marked Pending Successfully");
                    //location.reload();
                }
            });
        }
    </script>

    <script>
        function fillMDocList() {
            var liObj = document.getElementById("ddlCompany");
            var sIndex = liObj.selectedIndex;
            var ccode = liObj.options[sIndex].value;
            if (ccode.length == 0) {
                ccode = 0;
            }
            $.ajax({
                cache: false,
                async: false,
                type: "POST",
                url: "@(Url.Action("getMasterDocumentNameList", "HelpUtility"))",
                data: { "ccode": ccode },
                success: function (data) {
                    //getting multiple records as (key,value) pair type list
                    $("#ddlMDocList").empty(); // clear before appending new list

                    $("#ddlMDocList").append($('<option />', {
                        value: "0",
                        text: "--Select--"
                    }));

                    $.each(data, function (i, item) {
                        $("#ddlMDocList").append($('<option />', {
                            value: item.Key,
                            text: item.Value
                        }));
                    });
                    action = data.Action;
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve states.');
                }
            });
        }
    </script>

}
