@model ManufacturingManagement_V2.Models.BankGuaranteeMdl

@{
    ViewBag.Title = "CreateUpdate";
    Layout = "~/views/shared/_LayoutCommon.cshtml";
}

<h4><b>Bank Guarantee Entry</b></h4>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

<div class="form-group">
    <h5><b>Details</b></h5>
    <table class="table table-bordered">
        <tr>
            @Html.HiddenFor(model => model.TenderId)
            @Html.HiddenFor(model => model.editTenderId)
            @Html.HiddenFor(model => model.editMode)
            <td>@Html.LabelFor(model => model.TenderNo)</td>
            <td>
                @Html.EditorFor(model => model.TenderNo)
                @Html.ValidationMessageFor(model => model.TenderNo)
            </td>
            <td>@Html.LabelFor(model => model.BGNumber)</td>
            <td>
                @Html.EditorFor(model => model.BGNumber)
                @Html.ValidationMessageFor(model => model.BGNumber)
            </td>
        </tr>
        <tr>
            <td>@Html.LabelFor(model => model.BGDate)</td>
            <td>
                @Html.EditorFor(model => model.BGDate)
                @Html.ValidationMessageFor(model => model.BGDate)
            </td>
            <td>@Html.LabelFor(model => model.SdBgAmount)</td>
            <td>
                @Html.EditorFor(model => model.SdBgAmount)
                @Html.ValidationMessageFor(model => model.SdBgAmount)
            </td>
        </tr>
        <tr>
            <td>@Html.LabelFor(model => model.Validity)</td>
            <td>
                @Html.EditorFor(model => model.Validity)
                @Html.ValidationMessageFor(model => model.Validity)
            </td>
            <td>@Html.LabelFor(model => model.ExtValidity)</td>
            <td>
                @Html.EditorFor(model => model.ExtValidity)
                @Html.ValidationMessageFor(model => model.ExtValidity)
            </td>
        </tr>
        <tr>
            <td>@Html.LabelFor(model => model.StatusId)</td>
            <td>
                @Html.DropDownListFor(model => model.StatusId, ViewBag.BGStatusList as SelectList)
                @Html.ValidationMessageFor(model => model.StatusId)
            </td>
            <td>@Html.LabelFor(model => model.Remarks)</td>
            <td>
                @Html.EditorFor(model => model.Remarks)
                @Html.ValidationMessageFor(model => model.Remarks)
            </td>
        </tr>
        <tr>
            <td>@Html.LabelFor(model => model.BGType)</td>
            <td>
                @Html.DropDownListFor(model => model.BGType, ViewBag.BGTypeList as SelectList)
                @Html.ValidationMessageFor(model => model.BGType)
            </td>
            <td colspan="2">
                @Html.EditorFor(model => model.sendToHistory)
                <b>Send Existing Detail to History</b>
            </td>
        </tr>
        <tr>
            <td><b>LOA Detail</b></td>
            <td colspan="3">
                <b>@Html.DisplayFor(model => model.LoaDetail)</b>
                <label id="lblLoaDetail"></label>
                @Html.ValidationMessageFor(model => model.Remarks)
            </td>
        </tr>
        <tr>
            <td><b>PO Detail</b></td>
            <td colspan="3">
                <b>@Html.DisplayFor(model => model.PODetail)</b>
                <label id="lblPODetail"></label>
                @Html.ValidationMessageFor(model => model.PODetail)
            </td>
        </tr>
        <tr>
            <td><span style="font-weight:bold;color:black;">Note:</span></td>
            <td colspan="3">
                <span style="font-weight:bold;color:black;">
                    Tender No is Not Editable
                </span>
            </td>
        </tr>
    </table>
</div>
    <h2>@ViewBag.Message</h2>
        <p>
            <input type="submit" class="btn btn-default" value='@ViewBag.AddEdit' />
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" }) 
        </p>
}

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>

    <script type="text/javascript">
        $(function () {
            $("input[type=text]").first().focus();
            //$("#EmpId").attr("placeholder", "start typing, then select");
            document.getElementById('StatusId').value = '@Model.StatusId';
            $("#sendToHistory").attr("style", "width:55px;height:25px;");
        });

        //Date Picker 
        $(".datepicker").datepicker({
            changeMonth: true,
            changeYear: true
        });
        //or
        $(document).ready(function () {
            $('.date').datepicker({ dateFormat: "dd/mm/yy" });
        });


    </script>

    <script type="text/javascript">
        $("#TenderNo").autocomplete({
            source: function (request, response) {
                var customer = new Array();
                $.ajax({
                    async: false,
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("AutoCompleteTenderNo", "HelpUtility"))",
                    data: { "term": request.term },
                    success: function (data) {
                        for (var i = 0; i < data.length ; i++) {
                            customer[i] = { label: data[i].Value, Id: data[i].Key };
                        }
                    }
                });
                response(customer);
            }, minLength: 2,
            select: function (event, ui) {
                document.getElementById('TenderId').value = ui.item.Id;
                $.ajax({
                    cache: false,
                    async: false,
                    type: "POST",
                    url: "@(Url.Action("getPODetail", "HelpUtility"))",
                    data: { "tenderid": ui.item.Id },
                    success: function (data) {
                        $('#lblLoaDetail').text(data.loadetail);
                        $('#lblPODetail').text(data.podetail);
                        action = data.Action;
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve states.');
                    }
                });
            }
        });
</script>

}

