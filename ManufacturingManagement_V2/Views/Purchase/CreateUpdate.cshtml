@model ManufacturingManagement_V2.Models.PurchaseMdl
@using Newtonsoft.Json

@{
        ViewBag.Title = "CreateUpdate";
        Layout = "~/views/shared/_LayoutCommon.cshtml";
}
 
    <h4><b>Purchase Entry</b></h4>
        <div class="form-group">
            <h5><b>Purchase Detail</b></h5>
            <table class="table table-bordered">
                @Html.Hidden("hfVendorId", null, new { @id = "hfVendorId" })
                @Html.Hidden("hfItemId", null, new { @id = "hfItemId" })
                @Html.Hidden("hfRecId", null, new { @id = "hfRecId" })
                @Html.Hidden("hfOrderLgrId", null, new { @id = "hfOrderLgrId" })
                @Html.Hidden("hfPurchaseId", null, new { @id = "hfPurchaseId" })
                <tr>
                    <td colspan="4"><input type="hidden" id="txtPurchaseId" /></td>
                </tr>
                <tr>
                    @*<td>@Html.DisplayNameFor(model => model.VType)</td>
            <td>@Html.DropDownList("ddlVType", ViewBag.VTypeList as SelectList)
            <span class="error">Invalid VType!</span></td>*@
                    <td style="width:10%;">@Html.DisplayNameFor(model => model.VNo)</td>
                    <td>
                        <input type="text" id="txtVNo" />
                        <span class="error">Invalid VNo!</span>
                    </td>
                    <td style="width:10%;">@Html.DisplayNameFor(model => model.VDate)</td>
                    <td>
                        <input type="text" id="txtVDate" class="datepicker" />
                        <span class="error">Invalid VDate!</span>
                    </td>
                </tr>
                <tr>
                    <td>Cash/Credit</td>
                    <td>
                        @Html.DropDownList("ddlCashCredit", ViewBag.CashCreditList as SelectList)
                        <span class="error">Cash/Credit not selected!</span>
                    </td>
                    <td>@Html.DisplayNameFor(model => model.VendorName)</td>
                    <td>
                        <input type="text" id="txtVendorName" />
                        <span class="error">Vendor not selected!</span>
                    </td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(model => model.IndentIds)</td>
                    <td>
                        <input type="text" id="txtIndentIds" />
                        <span class="error">Indent(s) not entered!</span>
                    </td>
                    <td>@Html.DisplayNameFor(model => model.OrderIds)</td>
                    <td>
                        <input type="text" id="txtOrderIds" />
                        <span class="error">Orders(s) not entered!</span>
                    </td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(model => model.OtherCharges)</td>
                    <td>
                        <input type="text" id="txtOtherCharges" value="0" />
                        <span class="error">Invalid other charges!</span>
                    </td>
                    <td>@Html.DisplayNameFor(model => model.Remarks)</td>
                    <td>
                        <input type="text" id="txtPRemarks" />
                        <span class="error">Invalid Remarks!</span>
                    </td>
                </tr>
                <tr><td colspan="4"><h5><b>Item Detail</b></h5></td></tr>
                <tr>
                    <td>Item From</td>
                    <td>
                        @Html.DropDownList("ddlItemOpt", ViewBag.ItemOptList as SelectList,
                     new { onchange = "setItemOption()" })
                    <span class="error">Item option not selected!</span>
                </td>
                <td>Item</td>
                <td>
                    <input type="text" id="txtOrderLgrId" />
                    <input type="text" id="txtItemCode" />
                    <span class="error">Item not selected!</span>
                </td>
            </tr>
            <tr>
                <td style="vertical-align:top;">Item Description</td>
                <td colspan="3">
                    <textarea id="txtItemDesc" rows="4" cols="80"></textarea>
                    <span class="error">Item description not entered!</span>
                </td>
            </tr>
            <tr>
                <td>Quantity</td>
                <td>
                    <input type="text" id="txtQty" />
                    <span class="error">Invalid Qty!</span>
                </td>
                <td>Unit</td>
                <td>
                    @Html.DropDownList("ddlUnit", ViewBag.UnitList as SelectList, 
                            new { disabled = "true" })
                    <span class="error">Unit not selected!</span>
                </td>
            </tr>
            <tr>
                <td>Rate</td>
                <td>
                    <input type="text" id="txtRate" />
                    <span class="error">Invalid Rate!</span>
                </td>
                <td>Discount/Unit</td>
                <td>
                    <input type="text" id="txtDiscount" />
                    <span class="error">Invalid Discount!</span>
                </td>
            </tr>
            <tr>
                <td>SGST %</td>
                <td>
                    <input type="text" id="txtSgstPer" />
                    <span class="error">Invalid SGST%!</span>
                </td>
                <td>IGST %</td>
                <td>
                    <input type="text" id="txtIgstPer" />
                    <span class="error">Invalid IGST%!</span>
                </td>
            </tr>
            <tr>
                <td>CGST %</td>
                <td>
                    <input type="text" id="txtCgstPer" />
                    <span class="error">Invalid CGST%!</span>
                </td>
                <td>Freight/Unit</td>
                <td>
                    <input type="text" id="txtFreightRate" />
                    <span class="error">Invalid Freight/Unit!</span>
                </td>
            </tr>
            <tr>
                <td>Remarks</td>
                <td colspan="2">
                    <input type="text" id="txtRemarks" />
                    <span class="error">Invalid remarks!</span>
                </td>
                <td colspan="2" style="text-align:left;">
                    <input type="button" class="btn btn-default" id="add" value="Add" />
                </td>
            </tr>
            </table>
        </div>

        @*<div class="details">
            <h4>Order Items</h4>
            <table>
                
            </table>
        </div>*@
        List of Items:
        <div id="orderItems">
 
        </div>
        <div style="padding:10px 0px; text-align:left;">
            <input id="submit" class="btn btn-default" type="button" value=@ViewData["AddEdit"]>
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
        </div>
        <br />

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

@section Scripts{
    <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
    <script type="text/javascript">
        $(function () {
            $("input[type=dropdownlist]").first().focus();
            document.getElementById("txtVDate").value = '@ViewBag.VDate';
            document.getElementById("txtOrderLgrId").value = '@ViewBag.VDate';
            $("#txtOrderLgrId").attr("style", "display:none;");
        });
    </script>
        
    <script type="text/javascript">
        $("#txtOrderLgrId").autocomplete({
            source: function (request, response) {
                var vendorid = document.getElementById('hfVendorId').value;
                var purchaseid = document.getElementById('hfPurchaseId').value;
                var customer = new Array();
                $.ajax({
                    async: false,
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("AutoCompleteVendorPOItemList", "HelpUtility"))",
                    data: { "term": request.term, "vendorid": vendorid, "purchaseid": purchaseid },
                    success: function (data) {
                        for (var i = 0; i < data.length ; i++) {
                            customer[i] = { label: data[i].Value, Id: data[i].Key };
                        }
                    }
                });
                response(customer);
            }, minLength: 2,
            select: function (event, ui) {
                document.getElementById('hfOrderLgrId').value = ui.item.Id;
                //detail-1
                $.ajax({
                    cache: false,
                    async: false,
                    type: "POST",
                    url: "@(Url.Action("getVendorPOItemDetail", "HelpUtility"))",
                data: { "recid": ui.item.Id },
                success: function (data) {
                    $('#hfItemId').val(data.itemid);
                    $('#txtRate').val(data.purchaserate);
                    $('#ddlUnit').val(data.unit);
                    $('#txtItemDesc').val(data.itemname);
                    action = data.Action;
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve states.');
                }
            });
            //detail-2
            //fillUnitList(ui.item.Id);
            //
        }
        });
</script>

    <script type="text/javascript">
        function setItemOption() {
            var liObj = document.getElementById("ddlItemOpt");
            var objIndex = liObj.selectedIndex;
            var objId = liObj.options[objIndex].value;
            var vendorId = document.getElementById("hfVendorId").value;
            var vendorName = document.getElementById("txtVendorName").value;
            if (vendorName == '') { vendorId = 0; }
            if (objId == '1') {
                if (!(vendorId) > 0) {
                    alert('Vendor not selected');
                    return;
                }
                $("#txtItemCode").attr("style", "display:none;");
                $("#txtOrderLgrId").attr("style", "display:block;");
            }
            else if (objId == '2') {
                $("#txtItemCode").attr("style", "display:block;");
                $("#txtOrderLgrId").attr("style", "display:none;");
            }
        }
    </script>

    <script type="text/javascript">
        $("#txtItemCode").autocomplete({
            source: function (request, response) {
                var customer = new Array();
                $.ajax({
                    async: false,
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("AutoCompleteStockItemList", "HelpUtility"))",
                    data: { "term": request.term },
                    success: function (data) {
                        for (var i = 0; i < data.length ; i++) {
                            customer[i] = { label: data[i].Value, Id: data[i].Key };
                        }
                    }
                });
                response(customer);
            }, minLength: 2,
            select: function (event, ui) {
                document.getElementById('hfItemId').value = ui.item.Id;
                //detail-1
                $.ajax({
                    cache: false,
                    async: false,
                    type: "POST",
                    url: "@(Url.Action("getItemDetail", "HelpUtility"))",
                    data: { "itemid": ui.item.Id },
                    success: function (data) {
                        $('#txtRate').val(data.purchaserate);
                        $('#ddlUnit').val(data.unit);
                        $('#txtItemDesc').val(data.itemname);
                        action = data.Action;
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve states.');
                    }
                });
                //detail-2
                //fillUnitList(ui.item.Id);
                //
            }
        });
</script>

    <script>
        function fillUnitList(itemid) {
            //var itemId = $('#ddlItem').val();
            $.ajax({
                cache: false,
                async: false,
                type: "POST",
                url: "@(Url.Action("getTransactionUnitList", "HelpUtility"))",
                data: { "itemid": itemid },
                success: function (data) {
                    //getting multiple records as (key,value) pair type list
                    $("#ddlUnit").empty(); // clear before appending new list 
                    $.each(data, function (i, item) {
                        $("#ddlUnit").append($('<option />', {
                            value: item.Key,
                            text: item.Value
                        }));
                    });
                    action = data.Action;
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve states.');
                }
            });
        }
</script>

    <script type="text/javascript">
        $("#txtVendorName").autocomplete({
            source: function (request, response) {
                var customer = new Array();
                $.ajax({
                    async: false,
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("AutoCompleteVendor", "HelpUtility"))",
                    data: { "term": request.term },
                    success: function (data) {
                        for (var i = 0; i < data.length ; i++) {
                            customer[i] = { label: data[i].Value, Id: data[i].Key };
                        }
                    }
                });
                response(customer);
            }, minLength: 2,
            select: function (event, ui) {
                document.getElementById('hfVendorId').value = ui.item.Id;
            }
        });
</script>

    @*<script type="text/javascript">
        $(document).ready(function () {
            $('#txtOrderDate').datepicker({
                dateFormat: "dd/mm/yy",
                showStatus: true,
                showWeeks: true,
                currentText: 'Now',
                autoSize: true,
                gotoCurrent: true,
                showAnim: 'blind',
                highlightWeek: true
            });
        });
</script>*@


    <script>
        //Date Picker
        $(".datepicker").datepicker({
            dateFormat: 'dd/mm/yy'
        });

        $(document).ready(function () {
            var orderItems = [];

            //Add button click function
            $('#add').click(function () {
                //Check validation of order item
                var isValidItem = true;

                //
                var liObj = document.getElementById("ddlItemOpt");
                var objIndex = liObj.selectedIndex;
                var objId = liObj.options[objIndex].value;
                var vendorId = document.getElementById("hfVendorId").value;
                var vendorName = document.getElementById("txtVendorName").value;
                var itemcode = '';

                if (vendorName == '') { vendorId = 0; }
                if (objId == '1') {
                    if (!(vendorId) > 0) {
                        isValidItem = false;
                        alert('Vendor not selected');
                        return;
                    }
                    if ($('#txtOrderLgrId').val().trim() == '' || $('#hfOrderLgrId').val().trim() == 0) {
                        isValidItem = false;
                        alert('Item not selected!');
                        document.getElementById("txtOrderLgrId").focus();
                        return;
                    }
                    itemcode = $('#txtOrderLgrId').val().trim();
                }
                else if (objId == '2') {
                    document.getElementById('hfOrderLgrId').value = 0;
                    if ($('#txtItemCode').val().trim() == '') {
                        isValidItem = false;
                        alert('Item not selected!');
                        document.getElementById("txtItemCode").focus();
                        return;
                    }
                    itemcode = $('#txtItemCode').val().trim();
                }
                //

                if (!($('#txtQty').val().trim() != '' && !isNaN($('#txtQty').val().trim()))) {
                    isValidItem = false;
                    $('#txtQty').siblings('span.error').css('visibility', 'visible');
                }
                else {
                    $('#txtQty').siblings('span.error').css('visibility', 'hidden');
                }

                if ($('#txtRate').val().trim() == '') {
                    txtRate.value = 0;
                }
                if (!($('#txtRate').val().trim() != '' && !isNaN($('#txtRate').val().trim()))) {
                    isValidItem = false;
                    $('#txtRate').siblings('span.error').css('visibility', 'visible');
                }
                else {
                    $('#txtRate').siblings('span.error').css('visibility', 'hidden');
                }

                if (!($('#txtItemDesc').val().trim() != '')) {
                    isValidItem = false;
                    $('#txtItemDesc').siblings('span.error').css('visibility', 'visible');
                }
                else {
                    $('#txtItemDesc').siblings('span.error').css('visibility', 'hidden');
                }

                if ($('#txtDiscount').val().trim() == '') {
                    txtDiscount.value = 0;
                }
                if (!($('#txtDiscount').val().trim() != '' && !isNaN($('#txtDiscount').val().trim()))) {
                    isValidItem = false;
                    $('#txtDiscount').siblings('span.error').css('visibility', 'visible');
                }
                else {
                    $('#txtDiscount').siblings('span.error').css('visibility', 'hidden');
                }

                if ($('#txtSgstPer').val().trim() == '') {
                    txtSgstPer.value = 0;
                }
                if (!($('#txtSgstPer').val().trim() != '' && !isNaN($('#txtSgstPer').val().trim()))) {
                    isValidItem = false;
                    $('#txtSgstPer').siblings('span.error').css('visibility', 'visible');
                }
                else {
                    $('#txtSgstPer').siblings('span.error').css('visibility', 'hidden');
                }

                if ($('#txtCgstPer').val().trim() == '') {
                    txtCgstPer.value = 0;
                }
                if (!($('#txtCgstPer').val().trim() != '' && !isNaN($('#txtCgstPer').val().trim()))) {
                    isValidItem = false;
                    $('#txtCgstPer').siblings('span.error').css('visibility', 'visible');
                }
                else {
                    $('#txtCgstPer').siblings('span.error').css('visibility', 'hidden');
                }

                if ($('#txtIgstPer').val().trim() == '') {
                    txtIgstPer.value = 0;
                }
                if (!($('#txtIgstPer').val().trim() != '' && !isNaN($('#txtIgstPer').val().trim()))) {
                    isValidItem = false;
                    $('#txtIgstPer').siblings('span.error').css('visibility', 'visible');
                }
                else {
                    $('#txtIgstPer').siblings('span.error').css('visibility', 'hidden');
                }

                if ($('#txtFreightRate').val().trim() == '') {
                    txtFreightRate.value = 0;
                }
                if (!($('#txtFreightRate').val().trim() != '' && !isNaN($('#txtFreightRate').val().trim()))) {
                    isValidItem = false;
                    $('#txtFreightRate').siblings('span.error').css('visibility', 'visible');
                }
                else {
                    $('#txtFreightRate').siblings('span.error').css('visibility', 'hidden');
                }

                //Add item to list if valid
                if (isValidItem) {
                    var liUnit = document.getElementById("ddlUnit");
                    var unitIndex = liUnit.selectedIndex;
                    var unitId = liUnit.options[unitIndex].value;
                    var unitName = liUnit.options[unitIndex].text;
                    orderItems.push({
                        ItemId: $('#hfItemId').val(),
                        OrderLgrId: $('#hfOrderLgrId').val(),
                        ItemCode: itemcode,
                        ItemDesc: $('#txtItemDesc').val(),
                        Qty: parseFloat($('#txtQty').val().trim()),
                        UnitId: unitId,
                        UnitName: unitName,
                        Rate: parseFloat($('#txtRate').val().trim()),
                        Discount: parseFloat($('#txtDiscount').val().trim()),
                        SgstPer: parseFloat($('#txtSgstPer').val().trim()),
                        CgstPer: parseFloat($('#txtCgstPer').val().trim()),
                        IgstPer: parseFloat($('#txtIgstPer').val().trim()),
                        FreightRate: parseFloat($('#txtFreightRate').val().trim()),
                        Remarks: $('#txtRemarks').val().trim()
                    });
                    //Clear fields
                    $('#hfItemId').val('').focus();
                    //$('#txtQty,#txtRate').val('');

                }
                //populate order items

                GeneratedItemsTable();
            });

            //Save button click function
            $('#submit').click(function () {
                //validation of order
                var isAllValid = true;

                if (orderItems.length == 0) {
                    $('#orderItems').html('<span style="color:red;">Please add items</span>');
                    isAllValid = false;
                }
                //if ($('#orderNo').val().trim() == '') {
                //    $('#orderNo').siblings('span.error').css('visibility', 'visible');
                //    isAllValid = false;
                //}
                //else {
                //    $('#orderNo').siblings('span.error').css('visibility', 'hidden');
                //}

                if (!($('#txtOtherCharges').val().trim() != '' && !isNaN($('#txtOtherCharges').val().trim()))) {
                    isAllValid = false;
                    $('#txtOtherCharges').siblings('span.error').css('visibility', 'visible');
                }
                else {
                    $('#txtOtherCharges').siblings('span.error').css('visibility', 'hidden');
                }

                //showEmployeeName();

                //Save if valid
                if (isAllValid) {

                    var liCC = document.getElementById("ddlCashCredit");
                    var ccIndex = liCC.selectedIndex;
                    var CCId = liCC.options[ccIndex].value;

                    var data = {
                        //order fields
                        PurchaseId: parseInt($('#txtPurchaseId').val().trim()),
                        VType: 'x',//vtypeId,
                        VNo: parseInt($('#txtVNo').val().trim()),
                        VDate: $('#txtVDate').val().trim(),
                        CashCredit: CCId,
                        VendorId: $('#hfVendorId').val(),
                        VendorName: $('#txtVendorName').val(),
                        Remarks: $('#txtPRemarks').val().trim(),
                        IndentIds: $('#txtIndentIds').val().trim(),
                        OtherCharges: $('#txtOtherCharges').val().trim(),
                        OrderIds: $('#txtOrderIds').val().trim(),
                        //ledger fields
                        Ledgers: orderItems
                    }

                    $(this).val('Please wait...');

                    $.ajax({
                        url: '/Purchase/CreateUpdate',
                        type: "POST",
                        data: JSON.stringify(data),
                        dataType: "JSON",
                        contentType: "application/json",
                        success: function (d) {
                            //check is successfully save to database 
                            if (d.status == true) {
                                //will send status from server side
                                alert(d.message);
                                //clear form
                                orderItems = [];
                                //$('#orderNo').val('');
                                //$('#orderDate').val('');
                                $('#orderItems').empty();
                            }
                            else {
                                alert(d.message);
                            }
                            $('#submit').val(d.AddEdit);
                        },
                        error: function () {
                            alert('Error. Please try again.');
                            //$('#submit').val('Save');
                            $('#submit').val(d.AddEdit);
                        }
                    });
                }

            });

            //edit mode
            $(function () {
                var mainObject = @Html.Raw(Json.Encode(Model))
                orderItems = @Html.Raw(Json.Encode(Model.Ledgers))
                //
                txtPurchaseId.value = mainObject.PurchaseId;
                //ddlVType.value = mainObject.VType;
                txtVNo.value = mainObject.VNo;
                txtVDate.value = mainObject.VDate.substring(0, 10);
                ddlCashCredit.value = mainObject.CashCredit;
                hfVendorId.value = mainObject.VendorId;
                txtVendorName.value = mainObject.VendorName;
                txtPRemarks.value = mainObject.Remarks;
                txtIndentIds.value = mainObject.IndentIds;
                txtOrderIds.value = mainObject.OrderIds;
                txtOtherCharges.value = mainObject.OtherCharges;
                //
                GeneratedItemsTable();
            });

            //function for show added items in table
            function GeneratedItemsTable() {
                if (orderItems.length > 0) {
                    var $table = $('<table class="tablecontainer" id="myTable" style="width:100%;"/>');
                    $table.append('<th>Item&nbsp;Code</th>');//0
                    $table.append('<th>Item&nbsp;Description</th>');//1
                    $table.append('<th>Quantity</th>');//2
                    $table.append('<th>Unit&nbsp;Name</th>');//3
                    $table.append('<th>Rate</th>');//4
                    $table.append('<th>Discount</th>');//5
                    $table.append('<th>SGST%</th>');//6
                    $table.append('<th>CGST%</th>');//7
                    $table.append('<th>IGST%</th>');//8
                    $table.append('<th>Freight</th>');//9
                    $table.append('<th>Remarks</th>');//10
                    $table.append('<th>Remove</th>');//11
                    $table.append('<th>Edit</th>');//12
                    $table.append('<td style="visibility:hidden;width:0px;border-color:transparent;">ItemId</td>');//13
                    $table.append('<td style="visibility:hidden;width:0px;border-color:transparent;">UnitId</td>');//14
                    $table.append('<td style="visibility:hidden;width:0px;border-color:transparent;">RecId</td>');//15
                    $table.append('<td style="visibility:hidden;width:0px;border-color:transparent;">OrderLgrId</td>');//16
                    $table.append('</tr></thead>');
                    var $tbody = $('<tbody/>');
                    $.each(orderItems, function (i, val) {
                        var $row = $('<tr/>');
                        //static for all rows---------------
                        $row.append($('<td/>').html(val.ItemCode));//0
                        $row.append($('<td/>').html(val.ItemDesc));//1
                        $row.append($('<td/>').html(val.Qty));//2
                        $row.append($('<td/>').html(val.UnitName));//3
                        $row.append($('<td/>').html(val.Rate));//4
                        $row.append($('<td/>').html(val.Discount));//5
                        $row.append($('<td/>').html(val.SgstPer));//6
                        $row.append($('<td/>').html(val.CgstPer));//7
                        $row.append($('<td/>').html(val.IgstPer));//8
                        $row.append($('<td/>').html(val.FreightRate));//9
                        $row.append($('<td/>').html(val.Remarks));//10
                        //--------------------------------------------
                        var $remove = $('<a href="#"><i class="fa fa-trash-o" style="font-size:15pt;"></a>');
                        $remove.click(function (e) {
                            var opt = confirm("Are you sure to delete this entry?");
                            if (opt == true) {
                                e.preventDefault();
                                orderItems.splice(i, 1);
                                GeneratedItemsTable();
                            }
                        });
                        $row.append($('<td/>').html($remove));//11
                        //--------------------------------------------
                        var $edit = $('<a href="#"><i class="fa fa-pencil-square" style="font-size:25pt;"></a>');
                        $edit.click(function (e) {
                            e.preventDefault();
                            txtItemCode.value = $(this).closest('tr').find('td:eq(0)').text();
                            txtItemDesc.value = $(this).closest('tr').find('td:eq(1)').text();
                            txtQty.value = $(this).closest('tr').find('td:eq(2)').text();
                            txtRate.value = $(this).closest('tr').find('td:eq(4)').text();
                            txtDiscount.value = $(this).closest('tr').find('td:eq(5)').text();
                            txtSgstPer.value = $(this).closest('tr').find('td:eq(6)').text();
                            txtCgstPer.value = $(this).closest('tr').find('td:eq(7)').text();
                            txtIgstPer.value = $(this).closest('tr').find('td:eq(8)').text();
                            txtFreightRate.value = $(this).closest('tr').find('td:eq(9)').text();
                            txtRemarks.value = $(this).closest('tr').find('td:eq(10)').text();
                            //remove=11
                            //edit=12
                            hfItemId.value = $(this).closest('tr').find('td:eq(13)').text();//itemid
                            //fillUnitList($(this).closest('tr').find('td:eq(13)').text());//note: fill unitlist then set unit //cl
                            ddlUnit.value = $(this).closest('tr').find('td:eq(14)').text();//unitid
                            hfRecId.value = $(this).closest('tr').find('td:eq(15)').text();//recid
                            hfOrderLgrId.value = $(this).closest('tr').find('td:eq(16)').text();//recid
                            //
                            ddlItemOpt.value = '2';
                            if (parseInt($('#hfOrderLgrId').val().trim()) > 0) {
                                ddlItemOpt.value = '1';
                                txtOrderLgrId.value = $(this).closest('tr').find('td:eq(0)').text();
                            }
                            setItemOption();
                            //
                            orderItems.splice(i, 1);
                            GeneratedItemsTable();
                        });
                        //--------------------------------------------
                        $row.append($('<td/>').html($edit));//12
                        $row.append($('<td style="visibility:hidden;width:0px;border-color:transparent;"/>').html(val.ItemId));//13
                        $row.append($('<td style="visibility:hidden;width:0px;border-color:transparent;"/>').html(val.UnitId));//14
                        $row.append($('<td style="visibility:hidden;width:0px;border-color:transparent;"/>').html(val.RecId));//15
                        $row.append($('<td style="visibility:hidden;width:0px;border-color:transparent;"/>').html(val.OrderLgrId));//16
                        $tbody.append($row);
                    });
                    console.log("current", orderItems);
                    $table.append($tbody);
                    $('#orderItems').html($table);
                }
                else {
                    $('#orderItems').html('');
                }
            }//
        });

    </script>
}
 
