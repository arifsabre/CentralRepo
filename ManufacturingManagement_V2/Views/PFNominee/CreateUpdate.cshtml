@model ManufacturingManagement_V2.Models.PFNomineeMdl

@{
    ViewBag.Title = "CreateUpdate";
    Layout = "~/Views/Shared/_LayoutCommon.cshtml";
}

<h4><b>Nominee Detail</b></h4>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

        <div class="form-group">
            <table class="table table-bordered">
                <tr>
                    @Html.HiddenFor(model => model.RecId)
                    @Html.HiddenFor(model => model.NewEmpId)
                    <td style="width:10%;">@Html.LabelFor(model => model.EmpId)</td>
                    <td>
                        @Html.EditorFor(model => model.EmpId)
                        @Html.ValidationMessageFor(model => model.EmpId)
                    <td style="width:10%;">@Html.LabelFor(model => model.MemberName)</td>
                    <td>
                        @Html.EditorFor(model => model.MemberName)
                    @Html.ValidationMessageFor(model => model.MemberName)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.BirthDate)</td>
                <td>
                    @Html.EditorFor(model => model.BirthDate)
                @Html.ValidationMessageFor(model => model.BirthDate)
            </td>
            <td>@Html.LabelFor(model => model.NomineeFor)</td>
            <td>
                @Html.DropDownListFor(model => model.NomineeFor, ViewBag.NomineeForList as SelectList)
            @Html.ValidationMessageFor(model => model.NomineeFor)
            </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.Relation)</td>
                <td>
                    @Html.EditorFor(model => model.Relation)
                @Html.ValidationMessageFor(model => model.Relation)
            </td>
            <td>@Html.LabelFor(model => model.SharePercent)</td>
            <td>
                @Html.EditorFor(model => model.SharePercent)
            @Html.ValidationMessageFor(model => model.SharePercent)
            </td>
            </tr>
            <tr>
                <td style="vertical-align:top;">@Html.LabelFor(model => model.MAddress)</td>
                <td colspan="3">
                    @Html.TextAreaFor(model => model.MAddress, new { style="width:550px;"})
                @Html.ValidationMessageFor(model => model.MAddress)
            </td>
            </tr>
            <tr>
                <td style="vertical-align:top;">@Html.LabelFor(model => model.GuardianDetail)</td>
                <td colspan="3">
                    @Html.TextAreaFor(model => model.GuardianDetail, new { style = "width:550px;" })
                @Html.ValidationMessageFor(model => model.GuardianDetail)
            </td>
            </tr>
            </table>
        </div>
    <h5><b>@ViewBag.Message</b></h5>
        <p>
            <input type="submit" class="btn btn-default" value=@ViewBag.AddEdit />
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
        </p>
}

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

@section Scripts {
    
    <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
    <script type="text/javascript">
        $(function () {
            $("input[type=text]").first().focus();
            $("#EmpId").attr("placeholder", "start typing, then select");
        });
    </script>

    <script type="text/javascript">
        $("#EmpId").autocomplete({
            source: function (request, response) {
                var customer = new Array();
                $.ajax({
                    async: false,
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("AutoCompleteEmployeeNew", "HelpUtility"))",
                    data: { "term": request.term },
                    success: function (data) {
                        for (var i = 0; i < data.length ; i++) {
                            customer[i] = { label: data[i].Value, Id: data[i].Key };
                        }
                    }
                });
                response(customer);
            }, minLength: 2,
            select: function (event, ui) {
                document.getElementById('NewEmpId').value = ui.item.Id;
            }
        });
</script>

}