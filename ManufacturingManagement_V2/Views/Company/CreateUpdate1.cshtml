@model ManufacturingManagement_V2.Models.CompanyMdl

@{
    ViewBag.Title = "CreateUpdate";
    Layout = "~/views/shared/_LayoutCommon.cshtml";
}

<h4><b>Company Entry</b></h4>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <div class="form-group">
        <h4>Company Details</h4>
        @Html.HiddenFor(model => model.CompCode)
        @Html.LabelFor(model => model.CmpName)
        @Html.EditorFor(model => model.CmpName)
        @Html.ValidationMessageFor(model => model.CmpName)
        @Html.LabelFor(model => model.DispIndex)
        @Html.EditorFor(model => model.DispIndex)
        @Html.ValidationMessageFor(model => model.DispIndex)


        @Html.LabelFor(model => model.ShortName)
        @Html.EditorFor(model => model.ShortName)
        @Html.ValidationMessageFor(model => model.ShortName)
        @Html.LabelFor(model => model.TdCmpCode)
        @Html.EditorFor(model => model.TdCmpCode)
        @Html.ValidationMessageFor(model => model.TdCmpCode)


        @Html.LabelFor(model => model.CIN)
        @Html.EditorFor(model => model.CIN)
        @Html.ValidationMessageFor(model => model.CIN)
        @Html.LabelFor(model => model.CerEccNo)
        @Html.EditorFor(model => model.CerEccNo)
        @Html.ValidationMessageFor(model => model.CerEccNo)


        @Html.LabelFor(model => model.PanNo)
        @Html.EditorFor(model => model.PanNo)
        @Html.ValidationMessageFor(model => model.PanNo)
        @Html.LabelFor(model => model.StateCode)
        @Html.EditorFor(model => model.StateCode)
        @Html.ValidationMessageFor(model => model.StateCode)


        @Html.LabelFor(model => model.GSTinNo)
        @Html.EditorFor(model => model.GSTinNo)
        @Html.ValidationMessageFor(model => model.GSTinNo)
        @Html.LabelFor(model => model.GSTinDate)
        @Html.EditorFor(model => model.GSTinDate)
        @Html.ValidationMessageFor(model => model.GSTinDate)


        @Html.LabelFor(model => model.Address1)
        @Html.EditorFor(model => model.Address1)
        @Html.ValidationMessageFor(model => model.Address1)
        @Html.LabelFor(model => model.Address2)
        @Html.EditorFor(model => model.Address2)
        @Html.ValidationMessageFor(model => model.Address2)


        @Html.LabelFor(model => model.Address3)
        @Html.EditorFor(model => model.Address3)
        @Html.ValidationMessageFor(model => model.Address3)
        @Html.LabelFor(model => model.Website)
        @Html.EditorFor(model => model.Website)
        @Html.ValidationMessageFor(model => model.Website)


        @Html.LabelFor(model => model.TinNo)
        @Html.EditorFor(model => model.TinNo)
        @Html.ValidationMessageFor(model => model.TinNo)
        @Html.LabelFor(model => model.TinDate)
        @Html.EditorFor(model => model.TinDate)
        @Html.ValidationMessageFor(model => model.TinDate)


        @Html.LabelFor(model => model.PhoneOff)
        @Html.EditorFor(model => model.PhoneOff)
        @Html.ValidationMessageFor(model => model.PhoneOff)
        @Html.LabelFor(model => model.PhoneResi)
        @Html.EditorFor(model => model.PhoneResi)
        @Html.ValidationMessageFor(model => model.PhoneResi)


        @Html.LabelFor(model => model.FaxNo)
        @Html.EditorFor(model => model.FaxNo)
        @Html.ValidationMessageFor(model => model.FaxNo)
        @Html.LabelFor(model => model.MobileNo)
        @Html.EditorFor(model => model.MobileNo)
        @Html.ValidationMessageFor(model => model.MobileNo)


        @Html.LabelFor(model => model.ContPer)
        @Html.EditorFor(model => model.ContPer)
        @Html.ValidationMessageFor(model => model.ContPer)
        @Html.LabelFor(model => model.EMail)
        @Html.EditorFor(model => model.EMail)
        @Html.ValidationMessageFor(model => model.EMail)


        @Html.LabelFor(model => model.Footer1)
        @Html.TextAreaFor(model => model.Footer1)
        @Html.ValidationMessageFor(model => model.Footer1)


        @Html.LabelFor(model => model.Footer2)
        @Html.TextAreaFor(model => model.Footer2)
        @Html.ValidationMessageFor(model => model.Footer2)


        @Html.LabelFor(model => model.Footer3)
        @Html.TextAreaFor(model => model.Footer3)
        @Html.ValidationMessageFor(model => model.Footer3)


        @Html.LabelFor(model => model.Footer4)
        @Html.TextAreaFor(model => model.Footer4)
        @Html.ValidationMessageFor(model => model.Footer4)


        @Html.LabelFor(model => model.Footer5)
        @Html.TextAreaFor(model => model.Footer5)
        @Html.ValidationMessageFor(model => model.Footer5)


        @Html.LabelFor(model => model.Footer6)
        @Html.TextAreaFor(model => model.Footer6)
        @Html.ValidationMessageFor(model => model.Footer6)


        @Html.LabelFor(model => model.Footer7)
        @Html.TextAreaFor(model => model.Footer7)
        @Html.ValidationMessageFor(model => model.Footer7)


        @Html.LabelFor(model => model.Footer8)
        @Html.TextAreaFor(model => model.Footer8)
        @Html.ValidationMessageFor(model => model.Footer8)


        @Html.LabelFor(model => model.Footer9)
        @Html.TextAreaFor(model => model.Footer9)
        @Html.ValidationMessageFor(model => model.Footer9)


        @Html.LabelFor(model => model.Footer10)
        @Html.TextAreaFor(model => model.Footer10)
        @Html.ValidationMessageFor(model => model.Footer10)


        @Html.LabelFor(model => model.CstNo)
        @Html.EditorFor(model => model.CstNo)
        @Html.ValidationMessageFor(model => model.CstNo)
        @Html.LabelFor(model => model.CstDate)
        @Html.EditorFor(model => model.CstDate)
        @Html.ValidationMessageFor(model => model.CstDate)


        @Html.LabelFor(model => model.BankName)
        @Html.EditorFor(model => model.BankName)
        @Html.ValidationMessageFor(model => model.BankName)
        @Html.LabelFor(model => model.AccountNo)
        @Html.EditorFor(model => model.AccountNo)
        @Html.ValidationMessageFor(model => model.AccountNo)


        @Html.LabelFor(model => model.IfscCode)
        @Html.EditorFor(model => model.IfscCode)
        @Html.ValidationMessageFor(model => model.IfscCode)
        @Html.LabelFor(model => model.FRegNo)
        @Html.EditorFor(model => model.FRegNo)
        @Html.ValidationMessageFor(model => model.FRegNo)


        @Html.LabelFor(model => model.EmployerAddress)
        @Html.TextAreaFor(model => model.EmployerAddress)
        @Html.ValidationMessageFor(model => model.EmployerAddress)


        @Html.LabelFor(model => model.ManagerName)
        @Html.EditorFor(model => model.ManagerName)
        @Html.ValidationMessageFor(model => model.ManagerName)


        @Html.LabelFor(model => model.ManagerAddress)
        @Html.TextAreaFor(model => model.ManagerAddress)
        @Html.ValidationMessageFor(model => model.ManagerAddress)


        @Html.LabelFor(model => model.PFNo)
        @Html.EditorFor(model => model.PFNo)
        @Html.ValidationMessageFor(model => model.PFNo)
        @Html.LabelFor(model => model.ESICNo)
        @Html.EditorFor(model => model.ESICNo)
        @Html.ValidationMessageFor(model => model.ESICNo)


    </div>
    <h5><b>@ViewBag.Message</b></h5>
    <p>
        <input type="submit" class="btn btn-default" value='@ViewBag.AddEdit' />
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
    </p>
}

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

@section Scripts {

    <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
    <script type="text/javascript">
        $(function () {
            $("input[type=text]").first().focus();
            @*$("#IsActive").attr("style", "width:55px;height:25px;");
            $("#EmpName").attr("placeholder", "start typing, then select");
            $("#HODUserName").attr("placeholder", "start typing, then select");
            document.getElementById("Title").value = '@Model.Title';//note*@
        });

    </script>

    <script type="text/javascript">
        $("#EmpName").autocomplete({
            source: function (request, response) {
                var customer = new Array();
                $.ajax({
                    async: false,
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("AutoCompleteEmployeeNew", "HelpUtility"))",
                    data: { "term": request.term },
                    success: function (data) {
                        for (var i = 0; i < data.length ; i++) {
                            customer[i] = { label: data[i].Value, Id: data[i].Key };
                        }
                    }
                });
                response(customer);
            }, minLength: 2,
            select: function (event, ui) {
                document.getElementById('EmpId').value = ui.item.Id;
                @*$.ajax({
                    cache: false,
                    async: false,
                    type: "POST",
                    url: "@(Url.Action("getAdvanceDeductionInfo", "Advance"))",
                    data: { "newempid": ui.item.Id },
                    success: function (data) {
                        $('#lblAdvanceInfo').text(data.advanceinfo);
                        action = data.Action;
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve states.');
                    }
                });*@
            }
        });
    </script>

    <script type="text/javascript">
        $("#HODUserName").autocomplete({
            source: function (request, response) {
                var customer = new Array();
                $.ajax({
                    async: false,
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("AutoCompleteHODUsersList", "HelpUtility"))",
                    data: { "term": request.term },
                    success: function (data) {
                        for (var i = 0; i < data.length ; i++) {
                            customer[i] = { label: data[i].Value, Id: data[i].Key };
                        }
                    }
                });
                response(customer);
            }, minLength: 2,
            select: function (event, ui) {
                document.getElementById('HODUserId').value = ui.item.Id;
            }
        });
    </script>

}

