@model ManufacturingManagement_V2.Models.JobworkReceiptMdl

@{
    ViewBag.Title = "CreateUpdate";
    Layout = "~/views/shared/_LayoutCommon.cshtml";
}

<h4><b>Jobwork Receipt Entry</b></h4>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <div class="form-group">
        <table class="table table-bordered">
            <tr><td colspan="3"><h5><b>Issue Details</b></h5></td></tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.ChallanNo)
                </td>
                <td>
                    <b>: @Html.DisplayFor(model => model.ChallanNo)</b>
                    @Html.ValidationMessageFor(model => model.ChallanNo)
                </td>
                <td>@Html.LabelFor(model => model.ChallanDateStr)</td>
                <td>
                    <b>: @Html.DisplayFor(model => model.ChallanDateStr)</b>
                    @Html.ValidationMessageFor(model => model.ChallanDateStr)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.VendorName)</td>
                <td>
                    <b>: @Html.DisplayFor(model => model.VendorName)</b>
                    @Html.ValidationMessageFor(model => model.VendorName)
                </td>
                <td>@Html.LabelFor(model => model.RMItemCode)</td>
                <td>
                    <b>: @Html.DisplayFor(model => model.RMItemCode)</b>
                    @Html.DisplayFor(model => model.RMShortName)
                    @Html.ValidationMessageFor(model => model.RMItemCode)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.IssuedQty)</td>
                <td>
                    <b>: @Html.DisplayFor(model => model.IssuedQty)</b>
                    @Html.ValidationMessageFor(model => model.IssuedQty)
                </td>
                <td>@Html.LabelFor(model => model.RMUnitName)</td>
                <td>
                    <b>: @Html.DisplayFor(model => model.RMUnitName)</b>
                    @Html.ValidationMessageFor(model => model.RMUnitName)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.RemainingQty)</td>
                <td>
                    <b>: @Html.DisplayFor(model => model.RemainingQty)</b>
                    @Html.ValidationMessageFor(model => model.RemainingQty)
                </td>
                <td>@Html.LabelFor(model => model.ProcessDesc)</td>
                <td>
                    : @Html.DisplayFor(model => model.ProcessDesc)
                    @Html.ValidationMessageFor(model => model.ProcessDesc)
                </td>
            </tr>
            <tr><td colspan="3"><h5><b>Receipt Details</b></h5></td></tr>
            <tr>
                @Html.HiddenFor(model => model.RecId)
                @Html.HiddenFor(model => model.DispId)
                @Html.HiddenFor(model => model.FGItemId)
                <td>@Html.LabelFor(model => model.RecDate)</td>
                <td>
                    @Html.EditorFor(model => model.RecDate)
                    @Html.ValidationMessageFor(model => model.RecDate)
                </td>
                <td>@Html.LabelFor(model => model.InvNo)</td>
                <td>
                    @Html.EditorFor(model => model.InvNo)
                    @Html.ValidationMessageFor(model => model.InvNo)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.InvDate)</td>
                <td>
                    @Html.EditorFor(model => model.InvDate)
                    @Html.ValidationMessageFor(model => model.InvDate)
                </td>
                <td>@Html.LabelFor(model => model.FGItemCode)</td>
                <td>
                    @Html.EditorFor(model => model.FGItemCode)
                    @Html.ValidationMessageFor(model => model.FGItemCode)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.FgItemQty)</td>
                <td>
                    @Html.EditorFor(model => model.FgItemQty)
                    @Html.ValidationMessageFor(model => model.FgItemQty)
                </td>
                <td>@Html.LabelFor(model => model.UnitId)</td>
                <td>
                    @Html.DropDownListFor(model => model.UnitId,
                        ViewBag.UnitList as SelectList,
                        new { @disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.UnitId)
                </td>
            </tr>
            <tr>
                <td colspan="4">
                    <span style="font-size:9pt;color:black;">
                        (In units of issued qty)
                    </span>
                </td>
            </tr>
            <tr>
                <td valign="top">@Html.LabelFor(model => model.ReceivedQty)</td>
                <td>
                    @Html.EditorFor(model => model.ReceivedQty)
                    @Html.ValidationMessageFor(model => model.ReceivedQty)
                </td>
                @*<td valign="top">@Html.LabelFor(model => model.WasteQty)</td>
            <td>  note: not in use
                @Html.EditorFor(model => model.WasteQty)
                @Html.ValidationMessageFor(model => model.WasteQty)
            </td>*@
                <td>@Html.LabelFor(model => model.Remarks)</td>
                <td>
                    @Html.EditorFor(model => model.Remarks)
                    @Html.ValidationMessageFor(model => model.Remarks)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.InvWQty)</td>
                <td>
                    @Html.EditorFor(model => model.InvWQty)
                    @Html.ValidationMessageFor(model => model.InvWQty)
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    <input type="submit" class="btn btn-default" value='@ViewBag.AddEdit' />
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
                </td>
                <td colspan="2">
                    <h5><b>@ViewBag.Message</b></h5>
                </td>
            </tr>
        </table>
        <br />
    </div>
}

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

@section Scripts {
    <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
    @*@Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/jqueryui")
        @Styles.Render("~/Content/themes/base/css")*@

    <script type="text/javascript">
        $(function () {
            $("input[type=text]").first().focus();
            $("#FGItemCode").attr("placeholder", "start typing, then select");
        });

        //Date Picker
        $(".datepicker").datepicker({
            changeMonth: true,
            changeYear: true
        });
        //or
        $(document).ready(function () {
            $('.date').datepicker({ dateFormat: "dd/mm/yy" });
        });
    </script>

    <script type="text/javascript">
        $("#FGItemCode").autocomplete({
            source: function (request, response) {
                var customer = new Array();
                $.ajax({
                    async: false,
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("AutoCompleteStockItemList", "HelpUtility"))",
                    data: { "term": request.term },
                    success: function (data) {
                        for (var i = 0; i < data.length ; i++) {
                            customer[i] = { label: data[i].Value, Id: data[i].Key };
                        }
                    }
                });
                response(customer);
            }, minLength: 2,
            select: function (event, ui) {
                document.getElementById('FGItemId').value = ui.item.Id;
                $.ajax({
                    cache: false,
                    async: false,
                    type: "POST",
                    url: "@(Url.Action("getItemDetail", "HelpUtility"))",
                    data: { "itemid": ui.item.Id },
                    success: function (data) {
                        //$('#txtRate').val(data.purchaserate);
                        $('#UnitId').val(data.unit);
                        //$('#txtItemDesc').val(data.itemname);
                        action = data.Action;
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve data.');
                    }
                });
            }
        });
    </script>

}